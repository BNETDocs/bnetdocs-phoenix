<?
	# Begin Code
	# -------------
	
	$auth = 'true';
	include_once('functions.php');
	include_once('db.php');
	
	require_once('bdif/class.html2text.dm'); 
	
	function nl2br_skip_html($string){
	    // remove any carriage returns (mysql)
	    $string = str_replace("\r", '', $string);

	    // replace any newlines that aren't preceded by a > with a <br />
	    $string = preg_replace('/(?<!>)\n/', "<br />\n", $string);

	    return $string;
	}

	function callback($buffer){
		#Convert to plain text

		$cachefile = 'cache/bnetdocsredux.txt';
		$h2t =& new html2text(nl2br_skip_html($buffer)); 
		$text = $h2t->get_text();
		$fp = fopen($cachefile, 'w');
		fwrite($fp, $text);
		fclose($fp);
		return ($text);
	}
	
	$cachefile = 'cache/bnetdocsredux.txt';
	$cachetime = 60 * 60 * 12; #Updated every 12 hours
	
	ob_start("callback");

	header("Content-type: text/plain");
	header("Cache-Control: no-store, no-cache");
	
	// Serve from the cache if it is younger than $cachetime
	$cached = false;
	if (file_exists($cachefile) && time() - $cachetime < filemtime($cachefile)) {
		include($cachefile);
		$cached = true;
	}
	#nl2br
	if($cached == false){
		?>
		Battle.net Documentation generated by BNETDocs<br>
		=======================================================<br>
		<br>
		Notes:<br>
		-------<br>
		A Battle.net server usually listens on TCP/IP port 6112.<br>
		A BNLS server usually listens on TCP/IP port 9367.<br>
		A message and its response have the same ID. (The response to BNLS_CDKEY is BNLS_CDKEY, etc)<br>
		<br>
		===============================<br>
		Begin Generated Documentation<br>
		===============================<br>
		<br>
		<?
		$sqlquerya = 'SELECT * FROM groups ORDER BY id';
		$groupsarray = mysql_query($sqlquerya);
		while($rowa = mysql_fetch_array($groupsarray)){
			$gid = $rowa['id'];
			$groupname = $rowa['groupname'];
			echo '<br>'.$groupname.'<br>';
			echo '------------------------------<br><br>';
			$sqlquery = 'SELECT * FROM packets WHERE pgroup='.$gid.' ORDER BY messageid,direction  DESC';
			$packetsarray = mysql_query($sqlquery);
			while($row = mysql_fetch_array($packetsarray)){
				$pid = $row['id'];
				$direction = $row['direction'];
				if($direction == 0){
					$direction = 'C > S &nbsp; ';
				} else {
					$direction = 'S > C &nbsp; ';
				}
				$messageid = '['.$row['messageid'].'] ';
				$messagename = $row['messagename'];
				$pclearance = $row['clearance'];
				
				
				
					$usedby = GetInfo('packets', 'id', $pid, 'usedby');

					if(!$usedby) $usedby = '';
					$format = GetInfo('packets', 'id', $pid, 'format');
					$remarks = GetInfo('packets', 'id', $pid, 'remarks');
					$mrelated = GetInfo('packets', 'id', $pid, 'related');
					$pstatus = GetInfo('packets', 'id', $pid, 'status');
					
					if(strlen($mrelated) > 0){
						$linkarray = explode(',', $mrelated);
						foreach($linkarray as $link){
							if($link){
								$link = trim(strtoupper($link));
								if(substr($link, 0, 1) == 'D' || substr($link, 0, 1) == 'P'){
									if(substr($link, 0, 1) == 'D') $table = 'documents';
									if(substr($link, 0, 1) == 'P') $table = 'packets';
									if(FieldVerify('id', $table, substr($link, 1))){
										# Link has been validated
										$rpdbid = substr($link, 1);
										$rpid = GetInfo('packets', 'id', $rpdbid, 'messageid');
										$rpname = GetInfo('packets', 'id', $rpdbid, 'messagename');
										$rpdirection = GetInfo('packets', 'id', $rpdbid, 'direction');
										$pxclearance = GetInfo('packets', 'id', $pid, 'clearance');
										if($rpdirection == 0){
											$rpdirection = "&nbsp;(C->S)";
										} else {
											$rpdirection = "&nbsp;(S->C)";
										}
										if($pxclearance > 0){
											if($userid){
												if((rank($userid) > $pclearance) || (rank($userid) == $pclearance)){
													$relatedlinkstring .= '['.$rpid.']&nbsp;'.$rpname.$rpdirection.'<br>   ';
												}
											}
										}
									}
								} else {
									$relatedlinkstring .= $link.'<br> ';
								}
							}
						}	
						#if(strlen($relatedlinkstring) > 0) $relatedlinkstring = trim(substr_replace($relatedlinkstring,"",-2));
					}
					
					$linkarray = '';
					$link = '';
					$table = '';
					$rpdbid = '';
					$rpid = '';
					$rpname = '';
					$rpdirection = '';
					$mrelated = '';

					switch ($pstatus) {
						case 0:
							$pstatus = 'RAW, NEEDS TO BE CLEANED UP';
							break;
						case 1: 
							$pstatus = '';
							break;
						case 2:
							$pstatus = 'MORE RESEARCH NEEDED';
							break;
						case 3:
							$pstatus = 'DEFUNCT';
							break;
					}
				
				
				if($pclearance > 0){
					if($userid){
						if((rank($userid) > $pclearance) || (rank($userid) == $pclearance)){
							echo $direction.$messageid.$messagename.'</font><br>';
							echo '**************************************<br><br>';
							if(trim($usedby)) echo 'Used By: '.$usedby.'<br><br>';
							if(trim($format)) echo 'Format:<br> '.$format.'<br><br>';
							if(trim($remarks)) echo 'Remarks:<br>'.$remarks.'<br><br>';
							if(trim($relatedlinkstring)) echo 'Related:<br> &nbsp; '.$relatedlinkstring.'<br><br>';
							echo '~~~~~~~~~~~~~~~~<br><br>';
						}
					}
				} else {
					if(!$pclearance){
						echo $direction.$messageid.$messagename.'</font><br>';
						echo '**************************************<br><br>';
						if(trim($usedby)) echo 'Used By: '.$usedby.'<br><br>';
						if(trim($format)) echo 'Format:<br> '.$format.'<br><br>';
						if(trim($remarks)) echo 'Remarks:<br>'.$remarks.'<br><br>';
						if(trim($relatedlinkstring)) echo 'Related:<br> &nbsp; '.$relatedlinkstring.'<br><br>';
						echo '~~~~~~~~~~~~~~~~<br><br>';
					}
				}
				$pclearance = '';
				$direction = '';
				$messageid = '';
				$messagename = '';
				$usedby = '';
				$remarks = '';
				$relatedlinkstring = '';
			}
		} 
		?><br>
		===============================<br>
		End of Generated Documentation<br>
		===============================<br>
		=======================================================<br>
		Battle.net Documentation generated by BNETDocs<br>
		=======================================================<br>
		<?
	}
	ob_end_flush();
?>