<?php

namespace BNETDocs\Views\Packet;

use \CarlBennett\MVC\Libraries\Common;
use \BNETDocs\Libraries\Exceptions\IncorrectModelException;
use \BNETDocs\Libraries\Model;
use \BNETDocs\Libraries\View;
use \BNETDocs\Models\Packet\Index as PacketIndexModel;

class IndexPHP extends View {

  public function getMimeType() {
    // There isn't an assigned MIME-type from IANA.
    // <https://cweiske.de/tagebuch/php-mimetype.htm>
    return "text/x-php;charset=utf-8";
  }

  public function render(Model &$model) {
    if (!$model instanceof PacketIndexModel) {
      throw new IncorrectModelException();
    }
    echo "<?php\n\n";
    echo "/**\n";
    echo " * BNETDocs: Phoenix\n";
    echo " * Copyright (C) 2003-2016 BNETDocs CC-BY-NC-SA 4.0\n";
    echo " * <" . Common::relativeUrlToAbsolute("/legal") . ">\n";
    echo " *\n";
    echo " * Packet ID constants for PHP\n";
    echo " * Generated by BNETDocs on "
      . $model->timestamp->format("r") . "\n";
    echo " */\n\n";
    echo "namespace BNETDocs\Packets;\n\n";
    foreach ($model->packets as $pkt) {
      echo "define(\"" . $pkt->getPacketName() . "\", "
        . $pkt->getPacketId(true) . ");\n";
    }
  }

}
