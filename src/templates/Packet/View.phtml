<?php /* vim: set colorcolumn= expandtab shiftwidth=2 softtabstop=2 tabstop=4 smarttab: */
namespace BNETDocs\Templates\Packet;
use \BNETDocs\Libraries\Authentication;
use \BNETDocs\Libraries\Comment;
use \BNETDocs\Libraries\User;
use \CarlBennett\MVC\Libraries\Common;
use \CarlBennett\MVC\Libraries\Pair;
$title = 'Packet Not Found';
$description = 'The requested packet does not exist or could not be found.';
$comments = $this->getContext()->comments;
$logged_in = Authentication::$user;
$logged_in_id = ($logged_in ? $logged_in->getId() : null);
$object = $this->getContext()->packet;
$object_id = $this->getContext()->packet_id;
$url = Common::relativeUrlToAbsolute('/packet/' . urlencode($object_id));
if ($object)
{
  $created_dt = $object->getCreatedDateTime();
  $edited_dt = $object->getEditedDateTime();
  $packet_id = $object->getPacketId(true);
  $url = $object->getURI();
  $title = $object->getName();
  $description = Common::stripUpTo(trim(filter_var(
    $object->getPacketRemarks(true), FILTER_SANITIZE_STRING
  )), "\n", 300);

  if ($object->getUserId() !== null)
  {
    $user_name   = $object->getUser()->getName();
    $user_id     = $object->getUserId();
    $user_url    = $object->getUser()->getURI();
    $user_avatar = $object->getUser()->getAvatarURI(40);
  }
  else
  {
    $user_name   = null;
    $user_id     = null;
    $user_url    = null;
    $user_avatar = null;
  }

  $deprecated = $object->isDeprecated();
  $research   = $object->isInResearch();
  $published  = $object->isPublished();
}

$this->opengraph->attach(new Pair('type', 'article'));
$this->opengraph->attach(new Pair('url', $url));

$edit_url = Common::relativeUrlToAbsolute('/packet/edit?id=' . urlencode($object_id));
$delete_url = Common::relativeUrlToAbsolute('/packet/delete?id=' . urlencode($object_id));
$edit_visible = ($logged_in && ($logged_in->getOptionsBitmask()
              & User::OPTION_ACL_PACKET_MODIFY));
$delete_visible = ($logged_in && ($logged_in->getOptionsBitmask()
                & User::OPTION_ACL_PACKET_DELETE));

require_once('./MarkdownBootstrapFix.inc.php');
require('./header.inc.phtml'); ?>
<div class="container mb-3">
<? if ($object) { ?>
  <a class="btn btn-sm btn-primary float-right mr-1" href="https://twitter.com/share?text=<?=urlencode($packet_id . ' ' . $object->getPacketName())?>&amp;url=<?=urlencode($url)?>" rel="external" data-popup="1"><img src="<?=Common::relativeUrlToAbsolute('/a/social-twitter-24px.png')?>"/></a>
  <a class="btn btn-sm btn-primary float-right mr-1" href="https://facebook.com/sharer/sharer.php?u=<?=urlencode($url)?>" rel="external" data-popup="1"><img src="<?=Common::relativeUrlToAbsolute('/a/social-facebook-24px.png')?>"/></a>
<? if ($delete_visible) { ?>
  <a class="btn btn-sm btn-danger float-right mr-1" href="<?=$delete_url?>" title="Delete">‚ùå</a>
<? } if ($edit_visible) { ?>
  <a class="btn btn-sm btn-secondary float-right mr-1" href="<?=$edit_url?>" title="Edit">üìù</a>
<? } ?>

  <h1><a href="<?=$url?>"><?=filter_var($title, FILTER_SANITIZE_FULL_SPECIAL_CHARS)?></a></h1>
  <table class="table table-striped"><tbody>
    <tr><th class="text-right">Message Id:</th><td><code><?=$packet_id?></code></td></tr>
    <tr><th class="text-right">Message Name:</th><td><code><?=filter_var($object->getPacketName(), FILTER_SANITIZE_FULL_SPECIAL_CHARS)?></code></td></tr>
    <tr><th class="text-right">Direction:</th><td><?=filter_var($object->getPacketDirectionLabel(), FILTER_SANITIZE_FULL_SPECIAL_CHARS)?></td></tr>
<? if ($deprecated || $research || !$published) { ?>
    <tr><th class="text-right">Flags:</th><td>
      <? if ($deprecated) require('./Deprecated.inc.phtml'); ?>
      <? if ($research) require('./InResearch.inc.phtml'); ?>
      <? if (!$published) require('./Draft.inc.phtml'); ?>
    </td></tr>
<? } ?>
    <tr><th class="text-right">Used By:</th><td><?
      $products = $this->getContext()->used_by;
      if (count($products) == 0) {
        echo '<em>(nothing or unknown)</em>';
      } else if (count($products) == 1) {
        echo filter_var($products[0]->getLabel(), FILTER_SANITIZE_STRING);
      } else {
        $j = count($this->getContext()->used_by);
        for ($i = 0; $i < $j; ++$i) {
          echo filter_var($this->getContext()->used_by[$i]->getLabel(), FILTER_SANITIZE_STRING);
          if ($i + 1 < $j) {
            ++$i;
            echo ', ';
            echo filter_var($this->getContext()->used_by[$i]->getLabel(), FILTER_SANITIZE_STRING) . "<br/>";
          } else {
            echo "<br/>";
          }
        }
      }
    ?></td></tr>
    <tr><th class="text-right">Message Format:<br/><sup class="text-muted">(does not include protocol header)</sup></th><td>
      <pre class="border border-primary overflow-auto rounded bg-dark text-light"><code class="language-objectivec"><?=$object->getPacketFormat()?></code></pre>
    </td></tr>
  </tbody></table>

  <h1>Remarks</h1>
  <div class="container"><?=\BNETDocs\Templates\MarkdownBootstrapFix($object->getPacketRemarks(true), true)?></div>

  <div class="card mt-3"><div class="card-body">
    <span class="float-right text-muted">
      <time datetime="<?=$created_dt->format('c')?>"><?=$created_dt->format('l, F j, Y')?></time>
<? if ($edited_dt) { ?>
      | <strong>Edited:</strong> <time datetime="<?=$edited_dt->format('c')?>"><?=$edited_dt->format('l, F j, Y'); ?></time>
<? } ?>
    </span>
<?  echo (!empty($user_url) && !empty($user_avatar) ?
      sprintf('<a href="%s"><img class="img-fluid rounded mr-2" src="%s"/>%s</a>',
        $user_url, $user_avatar, filter_var($user_name, FILTER_SANITIZE_FULL_SPECIAL_CHARS)
      ) : 'Anonymous'
    ); ?>
  </div></div>
<? $comment_parent_type = Comment::PARENT_TYPE_PACKET; $comment_parent_id = $object_id; require('./Comment/Section.inc.phtml');
  } else { ?>
  <h1 class="text-danger"><?=filter_var($title, FILTER_SANITIZE_STRING)?></h1>
  <div class="row"><div class="col"><?=filter_var($description, FILTER_SANITIZE_STRING)?></div></div>
<? } require('./footer.inc.phtml'); ?>
