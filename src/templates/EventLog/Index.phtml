<?php

namespace BNETDocs\Templates\EventLog;

use \BNETDocs\Libraries\Exceptions\UserNotFoundException;
use \BNETDocs\Libraries\Logger;
use \BNETDocs\Libraries\User;
use \CarlBennett\MVC\Libraries\Common;
use \CarlBennett\MVC\Libraries\Pair;
use \DateTime;
use \DateTimeZone;

$title       = "Event Log Index";
$description = "The index for event logs on BNETDocs";
$this->opengraph->attach(new Pair("url", "/eventlog/index"));

$event_logs      = $this->getContext()->event_log;
$event_log_count = $this->getContext()->sum_event_log;
$event_tz        = new DateTimeZone('UTC');

require("./header.inc.phtml");
?>
      <article>
<?php if ($this->getContext()->acl_allowed) { ?>
        <header>Event Log Index</header>
        <section>
<?php require("./NYI.inc.phtml"); ?>
        </section>
        <section>
          <p>Found <?php echo number_format($event_log_count); ?> event(s).</p>
<?php if ($event_log_count > 0) { ?>
          <table><thead><tr>
            <th>Id</th>
            <th>Event Type</th>
            <th>Timestamp</th>
            <th>User</th>
            <th>IP Address</th>
          </tr></thead><tbody>
<?php foreach ($event_logs as $event_object) {
            if (is_null($event_object->user_id)) {
              $event_user = null;
              $event_user_html = 'Anonymous';
            } else {
              try {
                $event_user = new User($event_object->user_id);
              } catch (UserNotFoundException $e) {
                $event_user = null;
              }
              $event_user_html = '<a href="';
              if (!$event_user) {
                  $event_user_html .= Common::relativeUrlToAbsolute(
                    '/user/' . $event_object->user_id
                  ) . '">' . $event_object->user_id . '</a>';
              } else {
                  $event_user_html .= Common::relativeUrlToAbsolute(
                    '/user/' . $event_object->user_id . '/'
                    . Common::sanitizeForUrl($event_user->getName())
                  ) . '">'
                  . '<img src="'
                    . $event_user->getAvatarURI(22) . '" width="22" /> '
                  . filter_var($event_user->getName(), FILTER_SANITIZE_STRING)
                  . '</a>';
              }
            }
            $event_timestamp = new DateTime(
              $event_object->event_datetime, $event_tz
            );
            if (is_null($event_object->ip_address)) {
              $event_ip = '<em>NULL</em>';
            } else {
              $event_ip = filter_var($event_object->ip_address, FILTER_SANITIZE_STRING);
            }
?>
            <tr>
              <td><?php echo $event_object->id; ?></td>
              <td><?php echo $event_object->event_type_label; ?></td>
              <td><time datetime="<?php echo $event_timestamp->format('c'); ?>"><?php echo $event_timestamp->format('l, F j, Y'); ?></time></td>
              <td><?php echo $event_user_html; ?></td>
              <td><?php echo $event_ip; ?></td>
            </tr>
<?php } ?>
          </tbody></table>
<?php } ?>
        </section>
<?php } else { ?>
        <header class="red">Event Log Index</header>
        <section class="red">
          <p>You are not authorized to view this page.</p>
        </section>
<?php } ?>
      </article>
<?php require("./footer.inc.phtml"); ?>
