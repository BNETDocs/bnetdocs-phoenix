Battle.net Documentation generated by BNETDocs
 =======================================================

 Notes:
 -------
 A Battle.net server usually listens on TCP/IP port 6112.
 A BNLS server usually listens on TCP/IP port 9367.
 A message and its response have the same ID. (The response to BNLS_CDKEY is BNLS_CDKEY, etc)

 ===============================
 Begin Generated Documentation
 ===============================

 Battle.net v1 Messages
 ------------------------------

 S > C [0x00] SID_NULL
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 [blank]

 Remarks:
 Keeps the connection alive. Clients do not need to respond to this message.

 ~~~~~~~~~~~~~~~~

 C > S [0x00] SID_NULL
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 [blank] 

 Remarks:
 Keeps the connection alive. This message should be sent to the server every 8 minutes (approximately).

 The server will send this to you automatically, you do not have to reply to it. You should send this on your own
 never-ending timer for at least as often as Battle.net does (give or take a few seconds).

 This packet is used to detect if your TCP connection has gone dead, to the point where you will never receive data from
 the server ever again until you reconnect your connection. A situation such as this can be created by unplugging your
 internet connection for a few minutes, or if your internet is dropped for whatever reason.

 ~~~~~~~~~~~~~~~~

 C > S [0x02] SID_STOPADV
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 [blank]

 Remarks:
 This message is sent to inform the server that a game should no longer be advertised to other users. It is sent when a
 game starts, or when a game is aborted (the host leaves).

 All Battle.snp clients (DRTL, DSHR, STAR/SEXP, JSTR, SSHR, and W2BN) always send this message when logging off, even if
 it not in a game.

 ~~~~~~~~~~~~~~~~

 S > C [0x04] SID_SERVERLIST
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Starcraft, Starcraft
 Japanese, Diablo I, Diablo II LOD

 Format:
 (DWORD) Server version
 (STRING) [] Server list

 Remarks:
 Client should set the internal Battle.net server list from the contents of this message.

 This packet is supported by all Battle.snp games and Diablo II and its expansion.

 Note that this packet is defunct. The clients (including Warcraft III) all ask Battle.net for the FILETIME structure of
 the gateway list file and then compares that structure to its own cached copy. If the FILETIMEs do not match, then it
 goes to BNFTP and downloads a new one and stores it to the Windows Registry (or on file, if using Mac) while also
 caching the new FILETIME for later. They do not ever under any circumstance store the actual file data, and therefore
as
 long as the cache is not changed and Battle.net always reports the same FILETIME, you can modify your gateway list
 without it knowing it changed.

 ~~~~~~~~~~~~~~~~

 S > C [0x05] SID_CLIENTID
 **************************************

 Used By: Starcraft Shareware, Diablo Shareware, Warcraft II, Starcraft Japanese, Diablo I

 Format:
 (DWORD) Registration Version
 (DWORD) Registration Authority
 (DWORD) Account Number
 (DWORD) Registration Token 

 Remarks:
 The following information is historical:

 This message used to be used to issue new values to the client for the above fields. New values were issued when the
 values supplied in SID_CLIENTID were found to be invalid.

 Since these fields are no longer used, the server now sets them to zero.

 ~~~~~~~~~~~~~~~~

 C > S [0x05] SID_CLIENTID
 **************************************

 Used By: Starcraft Shareware, Starcraft Japanese

 Format:
 (DWORD) Registration Version
 (DWORD) Registration Authority
 (DWORD) Account Number
 (DWORD) Registration Token
 (STRING) LAN Computer Name
 (STRING) LAN Username

 Remarks:
 This packet was used to ensure that the client's account number was valid. All but the last two fields in this message
 are now ignored, and may be set to zero.

 The 'LAN Computer Name' field is the NetBIOS name of the computer. It can be retrieved using the GetComputerName [1]
 API.

 The 'Lan Username' field is the name of the currently logged on user, and may be retrieved using the GetUsername [2]
 API.

 The following information is historical:

 The client would supply this data as issued by a Battle.net server. If the Registration Version, Registration
 Authority, and Client Token values equated to the account number supplied (Client ID), as determined by an unknown
 formula, the server would respond with the same values. If they were invalid, the server would assign new values.
 Registration Version was always 1, Authority was the IP address of the server that issued the account number. Thus, the
 Client Token was the secret value, used to prove that the client really owned the account in question.

 ~~~~~~~~~~~~~~~~

 S > C [0x06] SID_STARTVERSIONING
 **************************************

 Used By: Starcraft Shareware, Diablo Shareware, Warcraft II, Starcraft Japanese, Diablo I

 Format:
 (FILETIME) MPQ Filetime
 (STRING) MPQ Filename
 (STRING) ValueString 

 Remarks:
 Contains CheckRevision values.

 ~~~~~~~~~~~~~~~~

 C > S [0x06] SID_STARTVERSIONING
 **************************************

 Used By: Starcraft Shareware, Diablo Shareware, Warcraft II, Starcraft Japanese, Diablo I

 Format:
 (DWORD) Platform ID
 (DWORD) Product ID
 (DWORD) Version Byte
 (DWORD) Unknown (0) 

 Remarks:
 This message is sent to the server to start the process of checking the game files. This message is part of the old
 logon process for products before Starcraft.

 ~~~~~~~~~~~~~~~~

 S > C [0x07] SID_REPORTVERSION
 **************************************

 Used By: Starcraft Shareware, Diablo Shareware, Warcraft II, Starcraft Japanese, Diablo I

 Format:
 (DWORD) Result
 (STRING) Patch path 

 Remarks:
 Reports success/failure on challenge.

 Result:
 0: Failed version check 1: Old game version 2: Success 3: Reinstall required

 ~~~~~~~~~~~~~~~~

 C > S [0x07] SID_REPORTVERSION
 **************************************

 Used By: Starcraft Shareware, Diablo Shareware, Warcraft II, Starcraft Japanese, Diablo I

 Format:
 (DWORD) Platform ID
 (DWORD) Product ID
 (DWORD) Version Byte
 (DWORD) EXE Version
 (DWORD) EXE Hash
 (STRING) EXE Information 

 Remarks:
 Contains CheckRevision response, version & EXE info.

 ~~~~~~~~~~~~~~~~

 S > C [0x08] SID_STARTADVEX
 **************************************

 Used By: Starcraft Shareware

 Format:
 (DWORD) Status 

 Remarks:
 Status
 0x00: Failed 0x01: Success

 ~~~~~~~~~~~~~~~~

 C > S [0x08] SID_STARTADVEX
 **************************************

 Used By: Starcraft Shareware

 Format:
 (DWORD) State
 (DWORD) Time since creation
 (WORD) Game Type
 (WORD) Parameter
 (DWORD) Unknown (0x00)
 (DWORD) Unknown (Likely ladder, but will always be 0x00 because there is no SSHR ladder)
 (STRING) Game name
 (STRING) Game password
 (STRING) Game Statstring

 Remarks:
 Creates a game in a manner similar to SID_STARTADVEX2 and SID_STARTADVEX3. This is only used by Starcraft Shareware.
 See documentation on SID_STARTADVEX3 for details on the values and their meanings.

 ~~~~~~~~~~~~~~~~

 S > C [0x09] SID_GETADVLISTEX
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 (DWORD) Number of games
 If count is 0: (DWORD) Status Otherwise, games are listed thus: For each list item: WARCRAFT III: (DWORD) Game Type
 (DWORD) Language ID (WORD) Address Family (Always AF_INET) (WORD) Port (DWORD) Host's IP (DWORD) sin_zero (0) (DWORD)
 sin_zero (0) (DWORD) Unknown (Public = 0x10, Private = 0x11) (DWORD) Elapsed time (in seconds) (STRING) Game name *
 (STRING) Game password (always empty) (BYTE) Free slots (character representing hexadecimal number) (BYTE)[8] Host
 counter (characters representing reversed hexadecimal number, ex: '20000000' for second time this host has hosted
during
 his session) (STRING) Encoded map information ALL OTHER CLIENTS: (WORD) Game Type (WORD) Sub Game Type (DWORD) Language
 ID (WORD) Address Family (Always AF_INET) (WORD) Port (DWORD) Host's IP (DWORD) sin_zero (0) (DWORD) sin_zero (0)
 (DWORD) Game Status (DWORD) Elapsed time (in seconds) (STRING) Game name * (STRING) Game password (STRING) Game
 statstring 

 Remarks:
 Returns a list of available games and their information. Varies depending on product.

 * This field is UTF-8 encoded.

 For WarCraft III, map information is encoded using the function found here [3]:
 Encoded data: (DWORD) Map Flags (BYTE) Map Null 1 (BYTE) Map Width (playable area) (BYTE) Map Null 2 (BYTE) Map Height
 (playable area) (BYTE) Map Null 3 (DWORD) Map CRC (STRING) Map Path (STRING) Game Host (BYTE) Map Unknown (possibly a
 STRING with just the null terminator) (BYTE)[20] Unknown (probably a SHA1 hash) Possible flags (combine the below
 settings) for Map Flags: Game Speed (mask 0x00000003, unique) 0x00000000: Slow 0x00000001: Normal 0x00000002: Fast
 Visibility setting (mask 0x00000F00, unique) 0x00000100: Hide Terrain 0x00000200: Map Explored 0x00000400: Always
 Visible 0x00000800: Default Observers setting (mask 0x40003000, unique) 0x00000000: No Observers 0x00002000: Observers
 on Defeat 0x00003000: Full Observers 0x40000000: Referees Other advanced host settings (mask 0x07064000, combinable)
 0x00004000: Teams Together (team members are placed at neighbored starting locations) 0x00060000: Lock Teams
0x01000000:
 Full Shared Unit Control 0x02000000: Random Hero 0x04000000: Random Races Non-WarCraft III Game Statstring Field:
 For other clients, game statring follows the format found here [4].

 WarCraft III Game Type Field (combine the below settings):
 Game Type (mask 0x000000FF, unique) 0x00000001: Custom 0x00000009: Ladder Map Author (mask 0x00006000, combinable)
 0x00002000: Blizzard 0x00004000: Custom Battle/Scenario (mask 0x00018000, unique) 0x00000000: Battle 0x00010000:
 Scenario Map Size (mask 0x000E0000, combinable) 0x00020000: Small 0x00040000: Medium 0x00080000: Huge Observers (mask
 0x00700000, unique) 0x00100000: Allowed observers ("Full Observers" and "Referees" options) 0x00200000: Observers on
 defeat 0x00400000: No observers Public/Private (mask 0x00000800, unique) 0x00000000: Public game 0x00000800: Private
 game STAR/SEXP/SSHR/JSTR/W2BN Game Type Field:
 Game Type (unique) 0x01: Custom (WAR3/W3XP) 0x02: Melee 0x03: Free For All 0x04: One vs One 0x05: Capture the Flag
 0x06: Greed 0x07: Slaughter 0x08: Sudden Death 0x09: Ladder 0x10: Iron man ladder (W2BN) 0x0A: Use Map Settings 0x0B:
 Team Melee 0x0C: Team FFA 0x0D: Team CTF 0x0F: Top vs. Bottom STAR/SEXP/SSHR/JSTR/W2BN Sub Game Type Field:
 For Greed: 0x01: 2500 resources 0x02: 5000 resources 0x03: 7500 resources 0x04: 10000 resources For Slaughter: 0x01: 15
 minutes 0x02: 30 minutes 0x03: 45 minutes 0x04: 60 minutes For Team Melee, Team Free For All, and Team Capture the
Flag:
 0x01: 2 teams 0x02: 3 teams 0x03: 4 teams For Top vs. Bottom: 0x01: 1 v 7 0x02: 2 v 6 0x03: 3 v 5 0x04: 4 v 4 0x05: 5 v
 3 0x06: 6 v 2 0x07: 7 v 1 For Ladder: 0x00: Disconnects do not count as loss 0x01: Disconnects count as loss For Other
 Game Types: 0x01: No sub-game type DRTL/DSHR Game Type Field:
 Game Type is used to specify a 'level range'. This ensures that clients receive a list of games containing players
 whose experience is similar to their own. 0x00: Level 1 0x01: Level 2 or 3 0x02: Level 4 or 5 0x03: Level 6 or 7 0x04:
 Level 8 or 9 0x05: Level 10 - 12 0x06: Level 13 - 16 0x07: Level 17 - 19 0x08: Level 20 - 24 0x09: Level 25 - 29 0x0A:
 Level 30 - 34 0x0B: Level 35 - 39 0x0C: Level 40 - 47 0x0D: Level 48 - 50 
 Note that fields from Address Family to sin_zero form a sockaddr_in structure.

 Valid status codes:
 This field is the 'Game Status' for non-WarCraft III and the 'Status' when no games are listed for both WarCraft III
 and other clients. 0x00: OK 0x01: Game doesn't exist 0x02: Incorrect password 0x03: Game full 0x04: Game already
started
 0x05: Spawned CD-Key not allowed 0x06: Too many server requests

 ~~~~~~~~~~~~~~~~

 C > S [0x09] SID_GETADVLISTEX
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Starcraft, Starcraft
 Japanese, Diablo I, Diablo II LOD

 Format:
 (WORD) Game Type
 (WORD) Sub Game Type
 (DWORD) Viewing Filter
 (DWORD) Reserved (0)
 (DWORD) Number of Games
 (STRING) Game Name
 (STRING) Game Password
 (STRING) Game Statstring

 Remarks:
 Retrieves a list of games.

 GAME TYPE: For STAR/SEXP/SSHR/JSTR and W2BN, a value of 0 indicates that any type is acceptable.
 Possible game types: 0x00: All 0x02: Melee 0x03: Free for all 0x04: one vs one 0x05: CTF 0x06: Greed 0x07: Slaughter
 0x08: Sudden Death 0x09: Ladder 0x10: Iron man ladder 0x0A: Use Map Settings 0x0B: Team Melee 0x0C: Team FFA 0x0D: Team
 CTF 0x0F: Top vs. Bottom 
 For DRTL/DSHR, Game Type is used to specify a 'level range'. This ensures that clients receive a list of games
 containing players whose experience is similar to their own.
 Possible ranges: 0x00: Level 1 0x01: 2 - 3 0x02: 4 - 5 0x03: 6 - 7 0x04: 8 - 9 0x05: 10 - 12 0x06: 13 - 16 0x07: 17 -
 19 0x08: 20 - 24 0x09: 25 - 29 0x0A: 30 - 34 0x0B: 35 - 39 0x0C: 40 - 47 0x0D: 48 - 50 For all other games, Game Type
 can be set to 0x00. SUB GAME TYPE: For Greed, this is resources in multiples of 2500 (0x01 = 2500, 0x02 = 5000, etc).
 For Slaughter, this is minutes in multiples of 15 (0x01 = 15, 0x02 = 30, etc). For Ladder, this indicates if
disconnects
 count as a loss (0x01 = Yes, 0x00 = No). For Team Melee, this is the number of teams (0x01 = 2, 0x02 = 3, etc). For
Team
 Free For All, this is the number of teams (0x01 = 2, 0x02 = 3, etc). For Team Capture The Flag, this is the number of
 teams (0x01 = 2, 0x02 = 3, etc). For Top vs. Bottom, this is the players to team ratio (1-7). For any other game type,
 it is 0x01 which indicates no sub game type. VIEWING FILTER: 0xFFFF is used to use the combination of values in this
 packet. 0xFF80 is used to show all games. For STAR/SEXP/SSHR/JSTR, viewing filter is set to 0x30. For DRTL/DSHR,
viewing
 filter is set to 0xFFFF by the game, but setting it to 0x00 will disable any viewing limitations, letting you view all
 games. RESERVED (0): This value is hardcoded to 0x00 by all games. NUMBER OF GAMES: This is the number of games to
 list. For a full listing, it's safe to use 0xFF. By default, DRTL/DSHR sets this to 0x19.

 ~~~~~~~~~~~~~~~~

 S > C [0x0A] SID_ENTERCHAT
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Starcraft, Starcraft
 Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 (STRING) Unique name
 (STRING) Statstring
 (STRING) Account name 

 Remarks:
 Contains Client product, realm, statstring, and is sent as the response when the client sends SID_ENTERCHAT. Unique
name
 is the users unique name in chat (Which may be Arta, Arta#2, Arta#3, etc). Account name is the users account name
(Which
 in all 3 previous examples would be Arta).

 Once you receive this packet, you are not in a channel, but can join/host games and join channels. Because you are not
 in a channel, you cannot send text messages yet (but you will not be disconnected if you do). See SID_JOINCHANNEL.

 ~~~~~~~~~~~~~~~~

 C > S [0x0A] SID_ENTERCHAT
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 (STRING) Username *
 (STRING) Statstring **

 Remarks:
 Joins Chat. 

 * Null on WAR3/W3XP.

 ** Null on CDKey Products, except for D2DV and D2XP when on realm characters..

 ~~~~~~~~~~~~~~~~

 S > C [0x0B] SID_GETCHANNELLIST
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 (STRING) [] Channel names, each terminated by a null string.

 Remarks:
 Contains a list of available channels.

 For some reason, Diablo II adds extra data to the channel list (as can be seen in game), and older clients list blocked
 channels, such as Warez and Backstage.

 ~~~~~~~~~~~~~~~~

 C > S [0x0B] SID_GETCHANNELLIST
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 (DWORD) Product ID 

 Remarks:
 Requests a list of channels that the client is permitted to enter.

 In the past this packet returned a product list for the specified Product ID, however, the Product ID field is now
 ignored -- it does not need to be a valid Product ID, and can be set to zero. The list of channels returned will be for
 the client's product, as specified during the client's logon.

 ~~~~~~~~~~~~~~~~

 C > S [0x0C] SID_JOINCHANNEL
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 (DWORD) Flags
 (STRING) Channel 

 Remarks:
 Joins a channel after entering chat.

 The Channel name must be no greater than 31 characters, otherwise it becomes trimmed by Battle.net.

 The flags field may contain the following values:
 0x00: NoCreate join
 0x01: First join
 0x02: Forced join
 0x05: D2 first join

 NoCreate Join: This will only join the channel specified if it is not empty, and is used by clients when selecting a
 channel from the channels menu. If the channel is empty, Battle.net sends a SID_CHATEVENT of type
 EID_CHANNELDOESNOTEXIST, upon which official clients prompt for confirmation that the user wishes to create the
channel,
 in which case, it resends this packet with Flags set to Forced Join (0x02). First Join: Places user in a channel
 starting with their product and country, followed by a number, ie 'Brood War GBR-1'. Also automatically sends MOTD
after
 entering the channel. When using this type, the Channel variable has no effect, but must be present anyway to avoid an
 IP ban. This is sent when first logging onto Battle.net Forced Join: This is sent when leaving a game, and joins the
 specified channel without an supplying an MOTD. D2 First Join: The same as First join, but is used for D2DV/D2XP
 clients.

 ~~~~~~~~~~~~~~~~

 C > S [0x0E] SID_CHATCOMMAND
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 (STRING) Text *

 Remarks:
 Send text or a command to Battle.net using this packet.

 For STAR/SEXP/SSHR/JSTR, Text is UTF-8 encoded (WIDESTRING).

 It is generally accepted as unwise to send any character below a space (0x20): this includes line feeds, carriage
 returns & control characters. The maximum number of characters is 224 per message including the null-terminator (so
 really only 223 characters), any longer and it becomes trimmed by Battle.net.

 If you send a line feed and/or a carriage return, Battle.net disconnects you and IP bans you for 5 minutes.

 ~~~~~~~~~~~~~~~~

 S > C [0x0F] SID_CHATEVENT
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 (DWORD) Event ID
 (DWORD) User's Flags
 (DWORD) Ping
 (DWORD) IP Address (Defunct)
 (DWORD) Account number (Defunct)
 (DWORD) Registration Authority (Defunct)
 (STRING) Username
 (STRING) Text *

 Remarks:
 Contains all chat events.

 For STAR/SEXP/SSHR/JSTR, Text is UTF-8 encoded (WIDESTRING).

 * Text should be no longer than 255 characters. Game clients should only be able to send 224 characters.
 Event IDs: [0x01] EID_SHOWUSER: User in channel [0x02] EID_JOIN: User joined channel [0x03] EID_LEAVE: User left
 channel [0x04] EID_WHISPER: Recieved whisper [0x05] EID_TALK: Chat text [0x06] EID_BROADCAST: Server broadcast [0x07]
 EID_CHANNEL: Channel information [0x09] EID_USERFLAGS: Flags update [0x0A] EID_WHISPERSENT: Sent whisper [0x0D]
 EID_CHANNELFULL: Channel full [0x0E] EID_CHANNELDOESNOTEXIST: Channel doesn't exist [0x0F] EID_CHANNELRESTRICTED:
 Channel is restricted [0x12] EID_INFO: Information [0x13] EID_ERROR: Error message [0x15] EID_IGNORE: Notifies that a
 user has been ignored (DEFUNCT) [0x16] EID_ACCEPT: Notifies that a user has been unignored (DEFUNCT) [0x17] EID_EMOTE:
 Emote EID_SHOWUSER: This is sent for each user who is already in a channel when you join it, as opposed to EID_JOIN,
 which is sent when a user joins a channel you have already joined. It is also sent when logged on using D2XP/D2DV and a
 user requires an update to their statstring - for example, by logging a different character onto a realm. EID_JOIN:
This
 is sent when a user enters the channel you are currently in. EID_LEAVE: This is sent when a user exits the channel you
 are currently in. EID_WHISPER: This is sent when a user whispers you. EID_TALK: This is sent when a user (excluding
 self) in chat speaks. EID_BROADCAST: The username supplied for this event is now always 'Battle.net'. Historically,
 username contained the name of the Battle.net Administrator who sent the broadcast. EID_CHANNEL: The flags field for
 this event is used and indicates what special conditions exist for the channel in question. See [Battle.net Flags] for
 more information. EID_USERFLAGS: This is sent to inform the client of an update to one or more user's flags. Battle.net
 usually sends this event for every user in the channel, even if only one user's flags have changed. This behavior can
be
 exploited to detect invisible users, by performing an action (such as an unsquelch) to provoke a flags update. Users
 included in the flags update whose presence has not been indicated by EID_JOIN or EID_SHOWUSER can then be added to the
 userlist as invisible. Care should be taken, however, to account for the possibility that an asynchronous send error
has
 occurred. Should an EID_JOIN or EID_SHOWUSER event occur for an invisible user, they should be marked as a normal user,
 not readded to the userlist. EID_WHISPERSENT: The Flags and Ping fields in this packet is equal to the originating user
 - the one who sent the whisper. In other words, EID_WHISPERSENT contains your flags & ping, not those of the person you
 whispered. EID_CHANNELDOESNOTEXIST: See info on NoCreate Join in SID_JOINCHANNEL. EID_CHANNELRESTRICTED: This is sent
 when attempting to join a channel which your client is not allowed to join. EID_INFO: This is information supplied by
 Battle.net. This text is usually displayed by clients in yellow. EID_Error: This is error information supplied by
 Battle.net. This text is usually displayed by clients in red. EID_Emote: This is sent when any user (including self)
 uses the emote feature in chat.

 ~~~~~~~~~~~~~~~~

 C > S [0x10] SID_LEAVECHAT
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 [blank] 

 Remarks:
 Leaves chat mode but does not disconnect. Generally sent when entering a game. This is also sent by D2DV/D2XP when
 switching characters, and by all products when logging off.

 After you send this, normal chat functions to not work. In order to enter a channel when you are not in chat mode, you
 must send SID_JOINCHANNEL.

 ~~~~~~~~~~~~~~~~

 C > S [0x12] SID_LOCALEINFO
 **************************************

 Used By: Diablo Shareware, Warcraft II, Diablo I

 Format:
 (FILETIME) System time
 (FILETIME) Local time
 (DWORD) Timezone bias
 (DWORD) SystemDefaultLCID
 (DWORD) UserDefaultLCID
 (DWORD) UserDefaultLangID
 (STRING) Abbreviated language name
 (STRING) Country name
 (STRING) Abbreviated country name
 (STRING) Country (English) 

 Remarks:
 Informs the server of the client's locale information. Much of this functionality has been incorporated into
 SID_AUTH_INFO, and more in-depth remarks can be found there. 

 ~~~~~~~~~~~~~~~~

 S > C [0x13] SID_FLOODDETECTED
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 [blank] 

 Remarks:
 Sent prior to a disconnect along with SID_MESSAGEBOX to indicate that the client has flooded off. 

 ~~~~~~~~~~~~~~~~

 C > S [0x14] SID_UDPPINGRESPONSE
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Warcraft II, Starcraft, Starcraft Japanese, Diablo
I

 Format:
 (DWORD) UDPCode 

 Remarks:
 Enables UDP support.

 Server supplies code via UDP packet PKT_SERVERPING (0x05). Usually 'bnet'.

 Not responding will give you a UDP Plug in chat (flag 0x10).

 You should send this anytime between S>C 0x50 SID_AUTH_INFO (or equivalent) and C>S 0x0A SID_ENTERCHAT. Sending this
 packet before or after these two packets will get you disconnected from official servers.

 ~~~~~~~~~~~~~~~~

 S > C [0x15] SID_CHECKAD
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III, World of Warcraft

 Format:
 (DWORD) Ad ID
 (DWORD) File extension
 (FILETIME) Local file time
 (STRING) Filename
 (STRING) Link URL

 Remarks:
 Contains information needed to download and display an ad banner. 

 ~~~~~~~~~~~~~~~~

 C > S [0x15] SID_CHECKAD
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 (DWORD) Platform ID
 (DWORD) Product ID
 (DWORD) ID of last displayed banner
 (DWORD) Current time

 Remarks:
 Requests ad banner information from Battle.net.

 Official clients send this packet every 20 seconds (give or take). You do not have to send this at all.

 In addition, Battle.net will not reply unless any of the fields above are updated from the last time you checked. If
 you have never checked before, Battle.net will always reply back.

 ~~~~~~~~~~~~~~~~

 C > S [0x16] SID_CLICKAD
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 (DWORD) Ad ID
 (DWORD) Request type

 Remarks:
 The clients send this when an ad is clicked.

 Request Type is 0 if the client used SID_QUERYADURL to get the ad's data, 1 otherwise. 

 ~~~~~~~~~~~~~~~~

 S > C [0x17] SID_READMEMORY
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Warcraft II, Starcraft, Starcraft Japanese, Diablo
I

 Format:
 (DWORD) Request ID
 (DWORD) Address
 (DWORD) Length

 Remarks:
 Rudimentary hack detection system. Was never used probably due to terrible implementation with little security.

 Yes, it is possible for a PvPGN server to read EVERYTHING that is in the process' memory, including sensitive
 information such as your CDKey.

 Found at:
 battle!1901D470h (as of 1.16.1)

 NOTE: No longer used, as Warden is now used to monitor for hacks. The Battle.net clients still support this though so
 one can code in support for it if one so desires. Due to it being no longer actively used by Battle.net, this packet is
 being marked as defunct. 

 ~~~~~~~~~~~~~~~~

 C > S [0x17] SID_READMEMORY
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Warcraft II, Starcraft, Starcraft Japanese, Diablo
I

 Format:
 (DWORD) Request ID
 (VOID) Memory

 Remarks:
 Rudimentary hack detection system. Was never used probably due to terrible implementation with little security.

 Yes, it is possible for a PvPGN server to read EVERYTHING that is in the process' memory, including sensitive
 information such as your CDKey.

 Found at:
 battle!1901D470h (as of 1.16.1)

 ~~~~~~~~~~~~~~~~

 S > C [0x18] SID_REGISTRY
 **************************************

 Format:
 (DWORD) Cookie
 (DWORD) HKEY
 (STRING) Registry path
 (STRING) Registry key 

 Remarks:
 HKEY is the registry key root.The values are standard: 0x80000000: HKEY_CLASSES_ROOT 0x80000001: HKEY_CURRENT_USER
 0x80000002: HKEY_LOCAL_MACHINE 0x80000003: HKEY_USERS 0x80000004: HKEY_PERFORMANCE_DATA 0x80000005: HKEY_CURRENT_CONFIG
 0x80000006: HKEY_DYN_DATA 0x80000050: HKEY_PERFORMANCE_TEXT 0x80000060: HKEY_PERFORMANCE_NLSTEXT

 ~~~~~~~~~~~~~~~~

 C > S [0x18] SID_REGISTRY
 **************************************

 Format:
 (DWORD) Cookie
 (STRING) Key Value 

 Remarks:
 Returns the requested registry value

 ~~~~~~~~~~~~~~~~

 S > C [0x19] SID_MESSAGEBOX
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 (DWORD) Style
 (STRING) Text
 (STRING) Caption

 Remarks:
 Displays a message to the user. This message's fields are used as parameters for the Win32 API MessageBox [5], and can
 be passed directly to it. For more information about these parameters, see the documentation for MessageBox [6] at
MSDN.

 Some more research on the behavior of this packet in Starcraft Broodwar has been done by HarpyWar and xboi209. Their
 documentation can be found on GitHub [7]. Specifically, their research shows how to display a small and large
MessageBox
 inside the client. A large MessageBox also shows the Caption parameter, whereas a small MessageBox does not.

 ~~~~~~~~~~~~~~~~

 S > C [0x1A] SID_STARTADVEX2
 **************************************

 Used By: Starcraft, Starcraft Broodwar, Diablo I, Diablo Shareware

 Format:
 (DWORD) Status

 Remarks:
 This message is used by Diablo to create a game. It was also used by Starcraft 1.03.

 Possible values for Status: 0x00000000: Failed 0x00000001: Ok 
 Note that Status 0x00000000 and 0x00000001 are in reverse of SID_STARTADVEX3's Status 0x00000000 and 0x00000001.

 More info: https://pastebin.com/WhKsmdnD [8]

 ~~~~~~~~~~~~~~~~

 C > S [0x1A] SID_STARTADVEX2
 **************************************

 Used By: Starcraft, Starcraft Broodwar, Diablo I, Diablo Shareware

 Format:
 (DWORD) Password Protected
 (DWORD) Unknown
 (DWORD) Unknown
 (DWORD) Unknown
 (DWORD) Unknown
 (DWORD) Port
 (STRING) Game name
 (STRING) Game password
 (STRING) Unknown
 (STRING) Game stats - Flags, Creator, Statstring 

 Remarks:
 This message is used by Diablo to create a game. It was also used by Starcraft 1.03.

 ~~~~~~~~~~~~~~~~

 C > S [0x1B] SID_GAMEDATAADDRESS
 **************************************

 Used By: Diablo I

 Format:
 (WORD) Unknown 1
 (SOCKADDR) Address & Port
 SOCKADDR structure is as follows: (WORD) Port (DWORD) Address (DWORD) Unknown 2
 (DWORD) Unknown 3

 Remarks:
 Specifies host & port that a game creator is using for a game.

 The three unknowns come from PvPGN documentation. The first unknown appears to always be 0x02, which is also seen in
 game listings. More info: https://pastebin.com/iDtEmhpr [9]

 ~~~~~~~~~~~~~~~~

 S > C [0x1C] SID_STARTADVEX3
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Starcraft, Starcraft
 Japanese, Diablo I, Diablo II LOD

 Format:
 (DWORD) Status 

 Remarks:
 Possible values for Status: 0x00: Ok 0x01: Failed

 ~~~~~~~~~~~~~~~~

 C > S [0x1C] SID_STARTADVEX3
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 (DWORD) Game State
 (DWORD) Game Uptime in seconds
 (WORD) Game Type
 (WORD) Sub Game Type
 (DWORD) Provider Version Constant (0xFF)
 (DWORD) Ladder Type
 (STRING) Game Name
 (STRING) Game Password
 (STRING) Game Statstring

 Remarks:
 Used by clients to inform the server that a game has been created, or that the state of a created game has changed.
 Bitwise flags for State: 0x01: Game is private 0x02: Game is full 0x04: Game contains players (other than creator)
 0x08: Game is in progress 0x80: Game is a replay Possible values for Game Type (Sub Game Type): 0x02: Melee 0x03: Free
 for All 0x04: 1 vs 1 0x05: Capture The Flag 0x06: Greed (Resources, 0x01: 2500, 0x02: 500, 0x03: 7500, 0x04: 10000)
 0x07: Slaughter (Minutes, 0x01: 15, 0x02: 30, 0x03: 45, 0x04: 60) 0x08: Sudden Death 0x09: Ladder (Disconnects, 0x00:
 Not a loss, 0x01: Counts as a loss) 0x0A: Use Map Settings 0x0B: Team Melee (Number Of Teams, 0x01: 2 Teams, 0x02: 3
 Teams, etc.) 0x0C: Team Free For All (Number Of Teams, 0x01: 2 Teams, 0x02: 3 Teams, etc.) 0x0D: Team Capture The Flag
 (Number Of Teams, 0x01: 2 Teams, 0x02: 3 Teams, etc.) 0x0F: Top vs. Bottom (Number Of Teams, 1-7 specifies the ratio of
 players belonging to both teams) 0x10: Iron Man Ladder (W2BN only) 0x20: PGL 
 Provider Version Constant: The Current version of the game (1.16.1) uses 0xFF, previous versions have used 0x1F, but
 this may vary depending on game version.

 Possible values for Ladder: 0x00: Game is Normal (Non-Ladder) 0x01: Game is Ladder 0x03: Game is Iron Man Ladder (W2BN
 only) It could be that the ladder is bitwise as well, and that 0x02 means Iron Man and 0x03 just means Iron Man +
 Ladder.
 Sub Game Type appears to be 0x01 for all game types except Top vs Bottom, where it seems to depend on the size of each
 team. More research will be needed to confirm.

 ~~~~~~~~~~~~~~~~

 S > C [0x1D] SID_LOGONCHALLENGEEX
 **************************************

 Used By: Diablo Shareware, Warcraft II, Diablo I

 Format:
 (DWORD) UDP Token
 (DWORD) Server Token 

 Remarks:
 Informs the client of the UDP Token and the Server Token.

 ~~~~~~~~~~~~~~~~

 C > S [0x1E] SID_CLIENTID2
 **************************************

 Used By: Diablo Shareware, Warcraft II, Diablo I

 Format:
 (DWORD) Server VersionFor server version 1: (DWORD) Registration Version (DWORD) Registration Authority For server
 version 0: (DWORD) Registration Authority (DWORD) Registration Version (DWORD) Account Number
 (DWORD) Registration Token
 (STRING) LAN computer name
 (STRING) LAN username 

 Remarks:
 See related link for more information.

 ~~~~~~~~~~~~~~~~

 C > S [0x1F] SID_LEAVEGAME
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 [blank] 

 Remarks:
 Notifies Battle.net that you have left a game. 

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 S > C [0x20] SID_ANNOUNCEMENT
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Warcraft II, Starcraft, Starcraft Japanese, Diablo
I

 Format:
 (STRING) Text

 Remarks:
 Very simply prints out text with the string at 1903B9FBh (the default string, used anyway if the username field is NULL
 in the chat event struct -- currently a single 0x7F char) as the username.

 Used to send announcements and arbitrary messages to the user, but this was soon superseded by SID_CHAT subcommands
 such as EID_INFO, EID_ERROR, and EID_BROADCAST. Printed out with the same color and style as an EID_BROADCAST.

 Found at:
 battle!1901DDA0h (as of 1.16.1)

 ~~~~~~~~~~~~~~~~

 C > S [0x21] SID_DISPLAYAD
 **************************************

 Format:
 (DWORD) Platform ID
 (DWORD) Product ID
 (DWORD) Ad ID
 (STRING) Filename
 (STRING) URL 

 Remarks:
 Sent when an ad is displayed. Perhaps for statistics?

 Null strings are now sent in place of Filename and URL, since the need to truncate long strings to 128 characters was
 causing inaccuracies.

 ~~~~~~~~~~~~~~~~

 C > S [0x22] SID_NOTIFYJOIN
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Starcraft, Starcraft
 Japanese, Diablo I, Diablo II LOD

 Format:
 (DWORD) Product ID *
 (DWORD) Product version
 (STRING) Game Name
 (STRING) Game Password

 Remarks:
 Notifies Battle.net that the client has joined a game. This is what causes you to receive "Your friend _ entered a _
 game called _." from Battle.net if you are mutual friends with this client.

 SID_LEAVECHAT (0x10) does not need to be sent after this, since this does what LEAVECHAT does but with an added
 notification.

 * This can be any valid Product ID, even if you are not connected with that ID.

 ~~~~~~~~~~~~~~~~

 S > C [0x23] SID_WRITECOOKIE
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Warcraft II, Starcraft, Starcraft Japanese, Diablo
I

 Format:
 (DWORD) unknown/unparsed -- Flags, Request ID?
 (DWORD) unknown/unparsed -- Timestamp?
 (STRING) Registry key name
 (STRING) Registry key value

 Remarks:
 Much like a website cookie, simply stores some arbitrary string to a 'cookie jar' to save preferences et al. which can
 be retrieved later by the server.

 Not used because it was quickly discovered that storing preferences produces less problems and were faster by storing
 them server-side, associating them with the account. It is somewhat curious that these packet IDs are close to
 SID_READUSERDATA/SID_WRITEUSERDATA (0x26 & 0x27).

 Found at: battle!190216FBh and battle!1901D660h, respectively.

 ~~~~~~~~~~~~~~~~

 S > C [0x24] SID_READCOOKIE
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Warcraft II, Starcraft, Diablo I

 Format:
 (DWORD) Echoed back, Request ID?
 (DWORD) Echoed back, Timestamp?
 (STRING) Registry key name

 Remarks:
 Much like a website cookie, simply stores some arbitrary string to a 'cookie jar' to save preferences et al. which can
 be retrieved later by the server.

 Not used because it was quickly discovered that storing preferences produces less problems and were faster by storing
 them server-side, associating them with the account. It is somewhat curious that these packet IDs are close to
 SID_PROFILE/SID_WRITEPROFILE (0x26 & 0x27).

 Found at: battle!190216FBh and battle!1901D660h, respectively.

 ~~~~~~~~~~~~~~~~

 C > S [0x24] SID_READCOOKIE
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Warcraft II, Starcraft, Starcraft Japanese, Diablo
I

 Format:
 (DWORD) First DWORD from S -> C
 (DWORD) Second DWORD from S -> C
 (STRING) Registry key name
 (STRING) Registry key value

 Remarks:
 Much like a website cookie, simply stores some arbitrary string to a 'cookie jar' to save preferences et al. which can
 be retrieved later by the server.

 Not used because it was quickly discovered that storing preferences produces less problems and were faster by storing
 them server-side, associating them with the account. It is somewhat curious that these packet IDs are close to
 SID_PROFILE/SID_WRITEPROFILE (0x26 you must submit this packet once for each user you wish to know about. This only
 applies to official Battle.net servers, it might not apply to PvPGN servers or equivalent software.

 Also, requesting 0x20 (32) or more keys at one time makes Battle.net kick you (it does not ban you, however).

 Profile Keys: * USER PROFILES: profilesex ** profileage † profilelocation profiledescription 
 ACCOUNT INFO: *** SystemAccount Created SystemAuthLevel SystemFlags SystemFriends SystemIcon SystemIP SystemLast Logoff
 SystemLast Logon SystemLeague SystemMFT Bytes SystemMFT Last Write SystemMFT Time Logged SystemPort SystemTime Logged
 SystemUsername 
 NORMAL GAMES: recordGAMEwins recordGAMElosses recordGAMEdisconnects recordGAMElast game recordGAMElast game result 
 LADDER GAMES: recordGAME1wins recordGAME1losses recordGAME1disconnects recordGAME1rating recordGAME1high rating
 DynKeyGAME1rank recordGAME1high rank recordGAME1last game recordGAME1last game result 
 IRONMAN LADDER GAMES: ‡ recordGAME3wins recordGAME3losses recordGAME3disconnects recordGAME3last game recordGAME3last
 game result recordGAME3rating recordGAME3high rating DynKeyGAME3rank * This list is not complete, and could use adding
 to. ** This field is defunct in STAR/SEXP/WAR3/W3XP. † This field is defunct. *** Battle.net returns blank values for
 anyone but yourself. ‡ W2BN only. Note that any profile key can contain an 0x09 (tab) character. 

 ~~~~~~~~~~~~~~~~

 C > S [0x27] SID_WRITEUSERDATA
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 (DWORD) Number of accounts
 (DWORD) Number of keys
 (STRING) [] Accounts to update
 (STRING) [] Keys to update
 (STRING) [] New values

 Remarks:
 Updates the Client's profile.
 Currently, the allowed keys for this are Sex, Location, and Description. The maximum length for the values is 512,
 including the null terminator.

 See SID_READUSERDATA for more information.

 ~~~~~~~~~~~~~~~~

 S > C [0x28] SID_LOGONCHALLENGE
 **************************************

 Used By: Starcraft Shareware, Diablo Shareware, Warcraft II, Starcraft Japanese, Diablo I

 Format:
 (DWORD) Server Token 

 Remarks:
 Contains the server token.

 This is sent after a request to version check with the old version check system.

 ~~~~~~~~~~~~~~~~

 S > C [0x29] SID_LOGONRESPONSE
 **************************************

 Used By: Starcraft Shareware, Diablo Shareware, Warcraft II, Starcraft Japanese, Diablo I

 Format:
 (DWORD) Result 

 Remarks:
 Reports success/fail on password authentication.
 Result: 0x00: Invalid password 0x01: Success

 ~~~~~~~~~~~~~~~~

 C > S [0x29] SID_LOGONRESPONSE
 **************************************

 Used By: Starcraft Shareware, Diablo Shareware, Warcraft II, Starcraft Japanese, Diablo I

 Format:
 (DWORD) Client Token
 (DWORD) Server Token
 (DWORD) [5] Password Hash
 (STRING) Username 

 Remarks:
 Contains Client's username developers should use the
 SID_CHECKDATAFILE2 message.

 The digest is created by using the broken SHA-1 hash on the first 64-bytes of the (filesize % 64) times. This due to a
 bug in the client. 

 ~~~~~~~~~~~~~~~~

 S > C [0x33] SID_GETFILETIME
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III, World of Warcraft

 Format:
 (DWORD) Request ID
 (DWORD) Unknown
 (FILETIME) Last update time
 (STRING) Filename 

 Remarks:
 Contains the latest filetime for the requested file. If the file does not exist, the returned filetime is null.

 ~~~~~~~~~~~~~~~~

 C > S [0x33] SID_GETFILETIME
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Warcraft III: TFT,
 Starcraft, Starcraft Japanese, Diablo I, Diablo II LOD, Warcraft III

 Format:
 (DWORD) Request ID
 (DWORD) Unknown
 (STRING) Filename

 Remarks:
 This packet seems to request the current filetime for the specified file. Purpose of first 2 DWORDs is unknown,
however,
 both are echoed back to the client by Battle.net and do not seem to affect the reply. Because of this it is reasonable
 to assume that first DWORD at least is a request ID of some kind. This is called into question, however, by the fact
 that the replying packet also contains the requested filename. The game (STAR/SEXP) always sends the same number in
 DWORD 1 for the file in question. DWORD 2 seems to be null.

 Known codes for DWORD 1: 0x01: tos_usa.txt
 0x03: bnserver-WAR3.ini
 0x1A: tos_USA.txt
 0x1B: bnserver.ini
 0x1D: icons_STAR.bni
 0x80000005: IX86ExtraWork.mpq
 0x80000004: bnserver-D2DV.ini

 ~~~~~~~~~~~~~~~~

 S > C [0x34] SID_QUERYREALMS
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Unknown
 (DWORD) Count
 For Each Realm: (DWORD) Unknown (STRING) Realm title (STRING) Realm description

 Remarks:
 Realm list.

 The first Unknown is usually 0. The second [and subsequent] Unknown is usually 1.

 This packet is no longer used. SID_QUERYREALMS2 is used instead.

 ~~~~~~~~~~~~~~~~

 C > S [0x34] SID_QUERYREALMS
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Unused (0)
 (DWORD) Unused (0)
 (STRING) Unknown (empty)

 Remarks:
 Requests a realm listing.

 This packet is no longer used. SID_QUERYREALMS2 is used instead.

 ~~~~~~~~~~~~~~~~

 S > C [0x35] SID_PROFILE
 **************************************

 Used By: Warcraft III: TFT, Warcraft III

 Format:
 (DWORD) Cookie
 (BYTE) Success
 (STRING) ProfileDescription value
 (STRING) ProfileLocation value
 (DWORD) Clan Tag

 Remarks:
 If the status code is 0, the request was successful; otherwise, the lookup failed and the message length will be five
 bytes long (not counting the four byte header).

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x35] SID_PROFILE
 **************************************

 Used By: Warcraft III: TFT, Warcraft III

 Format:
 (DWORD) Cookie
 (STRING) Username

 Remarks:
 This requests a profile for a user. This message's official name is not known, and has been invented.

 It is safe to look up any username you want. The username can have illegal characters, can be of any length, and can
 have all the other "illy" username characteristics. This message can also be used across all products without a
problem,
 not just WAR3/W3XP.

 Battle.net will translate the realm in the username for you, so you can look up @Azeroth as well as @USEast, if you
 want. You cannot perform cross-realm look ups, however; that is to say you cannot look up @USWest if you're on @USEast
 and likewise for the other realms.

 If you look up a user that is not on their Warcraft III user table, then the clan tag in the replying message will
 always be null. But it is safe to do this as well. The profile description and location strings will match that of the
 user you look up, regardless of which internal user table the user resides on.

 ~~~~~~~~~~~~~~~~

 S > C [0x36] SID_CDKEY2
 **************************************

 Used By: Warcraft II

 Format:
 (DWORD) Result
 (STRING) Key owner

 Remarks:
 This packet is identical to SID_CDKEY (0x30)

 Possible values for Result: 0x01: OK 0x02: Invalid key 0x03: Bad product 0x04: Banned 0x05: In use 
 In addition, the Key Owner field has two special values:

 * 'TOO MANY SPAWNS': Exceeded spawn limit for this CD-Key
 * 'NO SPAWNING': Spawns are not supported for this CD-Key

 ~~~~~~~~~~~~~~~~

 C > S [0x36] SID_CDKEY2
 **************************************

 Used By: Warcraft II

 Format:
 (DWORD) Spawn (0/1)
 (DWORD) Key Length
 (DWORD) CDKey Product
 (DWORD) CDKey Value1
 (DWORD) Server Token
 (DWORD) Client Token
 (DWORD) [5] Hashed Data
 (STRING) Key owner

 Remarks:
 This packet is an updated version of SID_CDKEY (0x30), designed to prevent CDKeys from being stolen, by sending them
 hashed instead of plain-text.

 The data that should be hashed is:

 * Client Token
 * Server Token
 * Key Product (from decoded CD key)
 * Key Value1 (from decoded CD key)
 * Key Value2 (from decoded CD key)

 ~~~~~~~~~~~~~~~~

 S > C [0x37] SID_UNKNOWN_37
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Unknown 1
 (DWORD) Unknown 2
 (DWORD) Count of characters

 For each character:
 (see related C>S packet for struct)

 Remarks:
 Not much is known about this packet. The structure of this packet and its documentation was taken from PvPGN. The
 collected information can be found here [11], which includes possible values for the packet format.

 ~~~~~~~~~~~~~~~~

 C > S [0x37] SID_UNKNOWN_37
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Count of open characters
 (VOID) [] Character structure

 For each character structure:
 (STRING) Realm Name (if closed) and Character Name
 (BYTE) Unknown B1
 (BYTE) Unknown B2
 (BYTE) Helm GFX
 (BYTE) Body GFX
 (BYTE) Leg GFX
 (BYTE) Left Hand Weapon
 (BYTE) Left Hand GFX
 (BYTE) Right Hand Weapon
 (BYTE) Right Hand GFX
 (BYTE) Unknown B3
 (BYTE) Unknown B4
 (BYTE) Unknown B5
 (BYTE) Unknown B6
 (BYTE) Unknown B7
 (BYTE) Unknown B8
 (BYTE) Unknown B9
 (BYTE) Unknown B10
 (BYTE) Unknown B11
 (BYTE) Class
 (DWORD) Unknown DW1
 (DWORD) Unknown DW2
 (DWORD) Unknown DW3
 (DWORD) Unknown DW4
 (BYTE) Level
 (BYTE) Status
 (BYTE) Title
 (BYTE) Unknown B13
 (BYTE) Emblem BGC
 (BYTE) Emblem FGC
 (BYTE) Emblem Number
 (BYTE) Unknown B14
 (STRING) Guild Tag (max length: 3)

 Remarks:
 Not much is known about this packet. The structure of this packet and its documentation was taken from PvPGN. The
 collected information can be found here [12], which includes possible values for the packet format.

 ~~~~~~~~~~~~~~~~

 C > S [0x39] SID_UNKNOWN_39
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (STRING) Character Name

 Remarks:
 Not much is known about this packet. The structure of this packet and its documentation was taken from PvPGN. The
 collected information can be found here [13].

 ~~~~~~~~~~~~~~~~

 S > C [0x3A] SID_LOGONRESPONSE2
 **************************************

 Used By: Starcraft Broodwar, Diablo II, Starcraft, Diablo II LOD

 Format:
 (DWORD) Status
 (STRING) Additional information

 Remarks:
 Status: 0x00: Success. 0x01: Account does not exist. 0x02: Invalid password. 0x06: Account closed. 
 The string containing the reason is only present when your account is closed. If not, the entire field is omitted
 including the null-terminator.

 ~~~~~~~~~~~~~~~~

 C > S [0x3A] SID_LOGONRESPONSE2
 **************************************

 Used By: Starcraft Broodwar, Diablo II, Starcraft, Diablo II LOD

 Format:
 (DWORD) Client Token
 (DWORD) Server Token
 (DWORD) [5] Password Hash
 (STRING) Username

 Remarks:
 This packet is the same as SID_LOGONRESPONSE, but has additional response codes.

 ~~~~~~~~~~~~~~~~

 S > C [0x3C] SID_CHECKDATAFILE2
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Warcraft II, Starcraft, Starcraft Japanese

 Format:
 (DWORD) Result

 Remarks:
 Result of file integrity query.
 Result: 0x00: Not approved 0x01: Blizzard approved 0x02: Approved for ladder

 ~~~~~~~~~~~~~~~~

 C > S [0x3C] SID_CHECKDATAFILE2
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Warcraft II, Starcraft, Starcraft Japanese

 Format:
 (DWORD) File size in bytes
 (DWORD) File hash [5]
 (STRING) Filename

 Remarks:
 Verifies that a file is authentic, by producing a hash of that file and sending it to the server for comparison to the
 original.

 The hash is a standard SHA1 hash.

 ~~~~~~~~~~~~~~~~

 S > C [0x3D] SID_CREATEACCOUNT2
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Starcraft, Starcraft
 Japanese, Diablo I, Diablo II LOD

 Format:
 (DWORD) Status
 (STRING) Account name suggestion

 Remarks:
 Account creation result.
 Result: 0x00: Account created 0x01: Name is too short 0x02: Name contained invalid characters 0x03: Name contained a
 banned word 0x04: Account already exists 0x05: Account is still being created 0x06: Name did not contain enough
 alphanumeric characters 0x07: Name contained adjacent punctuation characters 0x08: Name contained too many punctuation
 characters

 ~~~~~~~~~~~~~~~~

 C > S [0x3D] SID_CREATEACCOUNT2
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Diablo Shareware, Diablo II, Warcraft II, Starcraft, Starcraft
 Japanese, Diablo I, Diablo II LOD

 Format:
 (DWORD) [5] Password hash
 (STRING) Username

 Remarks:
 Creates a Battle.net account. Usernames longer than 15 characters are truncated.

 Passwords should be converted to lower case before hashing, and are only hashed once (unlike SID_LOGONRESPONSE).

 ~~~~~~~~~~~~~~~~

 S > C [0x3E] SID_LOGONREALMEX
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) MCP Cookie
 (DWORD) MCP Status
 (DWORD) [2] MCP Chunk 1
 (DWORD) IP
 (DWORD) Port
 (DWORD) [12] MCP Chunk 2
 (STRING) Battle.net unique name

 Remarks:
 This packet supplies the data necessary to connect to an MCP server. The cookie value is defined in the first DWORD of
 SID_LOGONREALMEX and is simply returned by Battle.net. If the length of the message (not including header) is greater
 than 8, the client should continue to logon to the MCP. Otherwise, the Status field is interpreted as an error code:

 0x80000001: Realm is unavailable
 0x80000002: Realm logon failed

 Any other value indicates failure.

 The first part of the MCP Chunk that must be sent to the MCP server includes the Status and Cookie DWORDS, making MCP
 Chunk 1 the first 4 DWORDS of the packet.

 There used to be a WORD at the end of this packet, which was apparently random.

 ~~~~~~~~~~~~~~~~

 C > S [0x3E] SID_LOGONREALMEX
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Client Token
 (DWORD) [5] Hashed realm password
 (STRING) Realm title

 Remarks:
 Realm password is always "password". The password hash is created the same way the hash is for logging on to an
account.

 ~~~~~~~~~~~~~~~~

 S > C [0x3F] SID_STARTVERSIONING2
 **************************************

 Format:
 (FILETIME) MPQ Filetime
 (STRING) MPQ Filename
 (STRING) ValueString

 Remarks:
 Contains CheckRevision values.

 Has anyone seen this packet in use? It's currently being marked as defunct, as I don't know of any clients that receive
 it.

 ~~~~~~~~~~~~~~~~

 S > C [0x40] SID_QUERYREALMS2
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Unknown
 (DWORD) Count
 For Each Realm: (DWORD) Unknown (STRING) Realm title (STRING) Realm description

 Remarks:
 Realm list.

 The first Unknown is usually 0. The second [and subsequent] Unknown is usually 1.

 ~~~~~~~~~~~~~~~~

 C > S [0x40] SID_QUERYREALMS2
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 [blank]

 Remarks:
 Requests a realm listing.

 ~~~~~~~~~~~~~~~~

 S > C [0x41] SID_QUERYADURL
 **************************************

 Used By: Warcraft III: TFT, Warcraft III

 Format:
 (DWORD) Ad ID
 (STRING) Ad URL 

 Remarks:
 Reports the Adbanner's URL. This message will only be received if the client sent it to the server. 

 ~~~~~~~~~~~~~~~~

 C > S [0x41] SID_QUERYADURL
 **************************************

 Used By: Warcraft III: TFT, Warcraft III

 Format:
 (DWORD) Ad ID 

 Remarks:
 Requests the URL for an ad if none is given.

 ~~~~~~~~~~~~~~~~

 S > C [0x42] SID_CDKEY3
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Status
 (STRING) CD-Key Owner or Error Message

 Remarks:
 Not much is known about this packet. The structure of this packet and its documentation was taken from PvPGN. The
 collected information can be found here [14].

 ~~~~~~~~~~~~~~~~

 C > S [0x42] SID_CDKEY3
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Unknown 1
 (DWORD) Unknown 2
 (DWORD) Unknown 3
 (DWORD) Unknown 4
 (DWORD) Unknown 5
 (DWORD) Unknown 6
 (DWORD) Unknown 7
 (DWORD) [5] CD-Key Hash
 (STRING) CD-Key Owner

 Remarks:
 Not much is known about this packet. The structure of this packet and its documentation was taken from PvPGN. The
 collected information can be found here [15].

 ~~~~~~~~~~~~~~~~

 S > C [0x43] SID_WARCRAFTUNKNOWN
 **************************************

 Used By: Warcraft III: TFT, Warcraft III

 Format:
 (DWORD) Unknown (0)

 Remarks:
 Unknown. I am unable to disassemble Warcraft III's game.dll without a lot of trouble, and therefore I have limited
 knowledge of it. It has been seen once, after SID_LOGONPROOF (0x54) in the NLS logon sequence.

 Found at: game.dll

 ~~~~~~~~~~~~~~~~

 S > C [0x44] SID_WARCRAFTGENERAL
 **************************************

 Used By: Warcraft III: TFT, Warcraft III

 Format:
 (BYTE) Subcommand ID
 0x00 (WID_GAMESEARCH): (DWORD) Cookie (DWORD) Status
 0x00000000: Search Started 0x00000004: Banned CD-Key 
 0x02 (WID_MAPLIST): (DWORD) Cookie (BYTE) Number of responses For each reponse: (DWORD) ID (DWORD) Checksum (WORD)
 Decompressed Length (WORD) Compressed Length (VOID) Compressed Data (BYTE) Remaining Packets 
 0x03 (WID_CANCELSEARCH): (DWORD) Cookie from WID_GAMESEARCH 
 0x04 (WID_USERRECORD): (DWORD) Cookie (DWORD) Icon ID (based on identifier; for example, "Orc Peon" is 'W3O1') (BYTE)
 Number of ladder records to read; this will be between 0 and 3. For each ladder record: (DWORD) Ladder type; valid
 types are 'SOLO', 'TEAM', or 'FFA ' (where the last character of 'FFA ' is a space, 0x20). (WORD) Number of wins (WORD)
 Number of losses (BYTE) Level (BYTE) Unknown* (WORD) Experience (DWORD) Rank (will be 0 if unranked) (BYTE) Number of
 race records to read; this will be 5 for WAR3 and 6 for W3XP. For each race record: (WORD) Wins (WORD) Losses (BYTE)
 Number of team records to read. For each team record: (DWORD) Type of team; valid types are '2VS2', '3VS3', and '4VS4'.
 (WORD) Number of wins (WORD) Number of losses (BYTE) Level (BYTE) Unknown* (WORD) Experience (DWORD) Rank (will be 0 if
 unranked) (FILETIME) Time of last game played (BYTE) Number of partners (STRING)[] Names of partners 
 0x07 (WID_TOURNAMENT): (DWORD) Cookie (Byte) Status
 0x00: No Tournament 0x01: Starting Soon 0x02: Ending Soon 0x03: Started 0x04: Last Call (FILETIME) Last Status
 Update Time (WORD) Unknown (WORD) Unknown (BYTE) Wins (BYTE) Losses (BYTE) Draws (BYTE) Unknown (BYTE) Unknown (BYTE)
 Unknown (BYTE) Unknown 
 0x08 (WID_CLANRECORD): (DWORD) Cookie (BYTE) Number of ladder records to read; this will be between 0 and 4. For each
 ladder record: (DWORD) Ladder type; valid types are 'CLNS' (solo), 'CLN2' (2v2), 'CLN3' (3v3), or 'CLN4' (4v4). (DWORD)
 Number of wins (DWORD) Number of losses (BYTE) Level (BYTE) Unknown* (DWORD) Experience (DWORD) Rank (will be 0 if
 unranked) (BYTE) Number of race records to read; this will be 5 for WAR3 and 6 for W3XP. For each race record: (DWORD)
 Wins (DWORD) Losses 
 0x09 (WID_ICONLIST): (DWORD) Cookie (DWORD) Selected Icon (BYTE) Tiers (BYTE) Count For each Icon: (DWORD) Icon
 (DWORD) Unit ID** (BYTE) Race (WORD) Wins required (BYTE) Enabled 

 Remarks:
 This message is still being researched!

 This message is used for multiple purposes on Warcraft III. Known and validated purposes are listed here.

 * The field was formerly labeled as "Hours until XP decay", but as no evidence to support this claim has ever been
 verified (and through personal testing has been found to be altogether false), it has been renamed as unknown for the
 time being. More information on this value would be appreciated.

 ** This is the name of the unit for which this icon should be displayed for. The names can be found in the
 war3.mpq/Units/UnitData.slk.

 ~~~~~~~~~~~~~~~~

 C > S [0x44] SID_WARCRAFTGENERAL
 **************************************

 Used By: Warcraft III: TFT, Warcraft III

 Format:
 (BYTE) Subcommand ID
 0x00 (WID_GAMESEARCH): (DWORD) Cookie (DWORD) Unknown (BYTE) Unknown (BYTE) Game Type
 0x00: 1vs1 0x01: 2vs2 0x02: 3vs3 0x03: 4vs4 0x04: Free for All (WORD) Enabled Maps (every bit is one map, from
 0x0000 to 0x0FFF) (WORD) Unknown (BYTE) Unknown (DWORD) Tick Count (DWORD) Race
 0x00000001: Human 0x00000002: Orc 0x00000004: Night Elf 0x00000008: Undead 0x00000020: Random 
 0x02 (WID_MAPLIST): (DWORD) Cookie (BYTE) Number of types requested For each type requested: (DWORD) ID* (DWORD)
 Checksum* 
 0x03 (WID_CANCELSEARCH): [blank] 
 0x04 (WID_USERRECORD): (DWORD) Cookie (STRING) Account name (DWORD) Product ID ('WAR3' or 'W3XP') 
 0x07 (WID_TOURNAMENT) (DWORD) Cookie 
 0x08 (WID_CLANRECORD): (DWORD) Cookie (DWORD) Clan Tag (DWORD) Product ID ('WAR3' or 'W3XP') 
 0x09 (WID_ICONLIST): (DWORD) Cookie 
 0x0A (WID_SETICON): (DWORD) Icon 

 Remarks:
 This packet is used for multiple purposes on Warcraft III. Known and validated purposes are listed here.

 *Not fully known yet.

 ~~~~~~~~~~~~~~~~

 C > S [0x45] SID_NETGAMEPORT
 **************************************

 Used By: Warcraft III: TFT, Warcraft III

 Format:
 (WORD) Port

 Remarks:
 Sets the port used by the client for hosting WAR3/W3XP games. This value is retreived from HKCUSoftwareBlizzard
 EntertainmentWarcraft IIIGameplaynetgameport, and is sent after the user logs on.

 ~~~~~~~~~~~~~~~~

 S > C [0x46] SID_NEWS_INFO
 **************************************

 Used By: Diablo II, Warcraft III: TFT, Diablo II LOD, Warcraft III

 Format:
 (BYTE) Number of entries
 (DWORD) Last logon timestamp
 (DWORD) Oldest news timestamp
 (DWORD) Newest news timestamp

 For each entry:(DWORD) Timestamp (STRING) News

 Remarks:
 This packet contains news from battle.net. Timestamps are in C/Unix format, biased for UTC.

 Multiple separate news messages can be received. These should be treated the same as if one message was sent with
 several news entries.

 If the 'Timestamp' field for an entry is zero, then that entry is the message of the day (and not a news entry in the
 normal respect).

 ~~~~~~~~~~~~~~~~

 C > S [0x46] SID_NEWS_INFO
 **************************************

 Used By: Diablo II, Warcraft III: TFT, Diablo II LOD, Warcraft III

 Format:
 (DWORD) News timestamp

 Remarks:
 Requests news and MOTD from battle.net.

 The news timestamp specifies the starting date for the news. To retrieve all available news entries, set this to zero.
 Timestamps are given in C/Unix format -- that is, the number of seconds since January 1, 1970 0:00:00.000 -- and should
 be biased to UTC.

 This message should be sent when you receive SID_ENTERCHAT. The official client stops processing messages after the
 user joins a game or enters a channel, and discards messages with more than 127 entries.

 News can be requested for older products, but Battle.net will only return the server's Message-of-the-Day. However,
 this behavior has not been observed in official clients, and for an accurate protocol emulation, its use is not
 recommended.

 ~~~~~~~~~~~~~~~~

 S > C [0x4A] SID_OPTIONALWORK
 **************************************

 Used By: Starcraft Broodwar, Diablo II, Warcraft III: TFT, Starcraft, Diablo II LOD, Warcraft III

 Format:
 (STRING) MPQ Filename

 Remarks:
 Using SID_GETFILETIME with request ID 0x80000005, the client should download this file and call the ExtraWork function
 inside of it. Generally, this message is used for the optional ExtraWork DLL.

 The client will only execute this entirely if the registry key HKCUSoftwareBattle.netOptimizeSysDesc [REG_DWORD] is set
 to 1.

 ~~~~~~~~~~~~~~~~

 C > S [0x4B] SID_EXTRAWORK
 **************************************

 Used By: Starcraft Broodwar, Diablo II, Warcraft III: TFT, Starcraft, Diablo II LOD, Warcraft III

 Format:
 (WORD) Game type
 (WORD) Length
 (STRING) Work returned data 

 Remarks:
 Response for both SID_OPTIONALWORK and SID_REQUIREDWORK.

 Game type:
 0x01: Diablo II 0x02: Warcraft III 0x03: Starcraft 0x04: World of Warcraft (Reason for this is not known, but most
 recent libraries have included it) 
 Length:The length is returned from the call to ExtraWork in the ExtraWork DLL. Traditionally, the library responsible
 for all ExtraWork requests has been IX86ExtraWork.dll. Work returned data:This data is based on a 1024-byte buffer. The
 call to ExtraWork takes in a structure and returns the length and buffer based on the game type.

 ~~~~~~~~~~~~~~~~

 S > C [0x4C] SID_REQUIREDWORK
 **************************************

 Used By: Starcraft Broodwar, Diablo II, Warcraft III: TFT, Starcraft, Diablo II LOD, Warcraft III

 Format:
 (STRING) ExtraWork MPQ FileName

 Remarks:
 Using SID_GETFILETIME with request ID 0x80000006, the client should download the specified MPQ file, extract
 ExtraWork.dll and call the ExtraWork function inside of it.

 ~~~~~~~~~~~~~~~~

 S > C [0x4E] SID_TOURNAMENT
 **************************************

 Used By: Starcraft Broodwar, Starcraft

 Format:
 (BYTE) Unknown
 (BYTE) Unknown, maybe number of non-null strings sent?
 (STRING) Description
 (STRING) Unknown
 (STRING) Website
 (DWORD) Unknown
 (STRING) Name
 (STRING) Unknown
 (STRING) Unknown
 (STRING) Unknown
 (DWORD[5]) Unknown

 Remarks:
 RESEARCH REQUESTED. Sent after a successful logon to an account in a WCG tournament. 
 The 0x0C packet sent with 0x01 flags would automatically have the user join channel WCG planetname #. 

 PACKET LOG FF 4E 58 00 01 03 57 6F 72 6C 64 20 43 79 62 65 72 20 47 61 6D 65 73 20 28 53 61 74 75 72 6E 29 00 00 68 74
 74 70 3A 2F 2F 77 77 77 2E 77 63 67 2E 63 6F 6D 00 57 43 47 00 00 00 00 00 80 07 01 00 00 00 00 00 01 01 00 02 02 00 00
 00 00 01 05 00 00 00 00 32 00 00 00

 ~~~~~~~~~~~~~~~~

 S > C [0x50] SID_AUTH_INFO
 **************************************

 Used By: Starcraft Broodwar, Diablo II, Warcraft III: TFT, Starcraft, Diablo II LOD, Warcraft III

 Format:
 (DWORD) Logon Type
 (DWORD) Server Token
 (DWORD) UDPValue *
 (FILETIME) MPQ filetime
 (STRING) IX86ver filename
 (STRING) ValueString

 WAR3/W3XP Only:
 (VOID) 128-byte Server signature

 Remarks:
 Contains the Server Token, and the values used in CheckRevision.

 Possible Logon Type values: 0x00: Broken SHA-1 (STAR/SEXP/D2DV/D2XP) 0x01: NLS version 1 (War3Beta) 0x02: NLS Version 2
 (WAR3/W3XP) * UDPValue
 No one really knows what this is, however, it is used in 2nd DWORD of the UDP packet PKT_CONNTEST2. It is also the
 second part of MCP Chunk 1 in MCP_STARTUP.

 ~~~~~~~~~~~~~~~~

 C > S [0x50] SID_AUTH_INFO
 **************************************

 Used By: Starcraft Broodwar, Diablo II, Warcraft III: TFT, Starcraft, Diablo II LOD, Warcraft III

 Format:
 (DWORD) Protocol ID (0)
 (DWORD) Platform ID 
 (DWORD) Product ID 
 (DWORD) Version Byte
 (DWORD) Product language*
 (DWORD) Local IP for NAT compatibility*
 (DWORD) Time zone bias*
 (DWORD) Locale ID*
 (DWORD) Language ID*
 (STRING) Country abreviation 
 (STRING) Country

 Remarks:
 Sends information about the Client to Battle.net.

 *These fields can be set to zero without breaking logon.

 Protocol ID:Battle.net's current Protocol ID is 0. Platform ID:A DWORD specifying the client's platform (IX86, PMAC,
 XMAC, etc). Product ID:A DWORD specifying the client's game. Version:The client's version byte. Product Language:This
 field is under investigation. It can safely be set to 0. MPQ Locale ID:This field is part of Blizzards multi-lingual
MPQ
 system. Is used to specify which version of an MPQ should be used when the MPQ is available in multiple languages.
Local
 IP:This is the local network IP of the client, in network byte order. Timezone bias:The difference, in minutes, between
 UTC and local time. The client calculates this value by subtracting the Local Time from the System Time, having
 converted both to Filetime structures, and then converting the resultant offset to minutes by diving it by 600,000,000.
 If you wish to understand the mechanism involved, read Microsoft's documentation on File times. Language ID, Country
 Abbreviation, and Country:These values can be retrieved by querying the system's locale information. Language ID can be
 retrieved using the GetUserDefaultLangID [16] API.
 Country Abbreviation & Country can be retrieved using the GetLocaleInfo [17] API to request the LOCALE_SABBREVCTRYNAME
 and LOCALE_SENGCOUNTRY, respectively.

 ~~~~~~~~~~~~~~~~

 S > C [0x51] SID_AUTH_CHECK
 **************************************

 Used By: Starcraft Broodwar, Diablo II, Warcraft III: TFT, Starcraft, Diablo II LOD, Warcraft III

 Format:
 (DWORD) Result
 (STRING) Additional Information

 Remarks:
 Reports success/failure on version 

 Byte N here refers to character in slot N, or 0 if the slot is empty.

 ~~~~~~~~~~~~~~~~

 C > S [0x06] MCP_GAMEINFO
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (WORD) Request ID
 (STRING) Game name

 Remarks:
 Requests information about a game.

 ~~~~~~~~~~~~~~~~

 S > C [0x07] MCP_CHARLOGON
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Result

 Remarks:
 Logon response.
 Known values: 0x00: Success 0x46: Player not found 0x7A: Logon failed 0x7B: Character expired 

 ~~~~~~~~~~~~~~~~

 C > S [0x07] MCP_CHARLOGON
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (STRING) Character name

 Remarks:
 Logs onto the realm.

 Note that attempting to log on using an expansion character on D2DV will result in an IPBan by both Battle.net and the
 Realm.

 ~~~~~~~~~~~~~~~~

 S > C [0x0A] MCP_CHARDELETE
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Result

 Remarks:
 Deletion response.
 Known values: (Diablo II v1.10 or later) 0x00: Success 0x49: Character doesn't exist (Diablo II v1.09 or earlier)
 0x00: Character doesn't exist 0x49: Success 

 ~~~~~~~~~~~~~~~~

 C > S [0x0A] MCP_CHARDELETE
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (WORD) Unknown (0)
 (STRING) Character name

 Remarks:
 Deletes a character.

 ~~~~~~~~~~~~~~~~

 S > C [0x11] MCP_REQUESTLADDERDATA
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (BYTE) Ladder type
 The 10-byte header: (WORD) Total response size (WORD) Current message size (WORD) Total size of unreceived messages
 (WORD) Rank of first entry (WORD) Unknown (0) Message data: (DWORD)Number of entries (DWORD)Unknown (0x10) For each
 entry: (QWORD) Character experience (BYTE) Character Flags (BYTE) Character title (WORD) Character level (BYTE) [16]
 Character name

 Remarks:
 Total Response Size: The size of the entire batch of SID_REQUESTLADDERDATA messages, excluding their headers and first
 bytes. Current Message Size: The size of the current message, excluding its header and first byte. Total size of
 unreceived messages: The total size of all the unreceived messages in the batch, excluding their headers and first
 bytes. In the last packet, this value is 0, since there are no unreceived messages. Rank of first entry: Always zero,
 except in the last message. In the last message, this specifies the zero-based rank of the first entry. (For example if
 this is 17 in the last packet, then ladder entries 18-33 were retrieved.) Character Flags (AND 0x07 to get character):
 0x00: Amazon 0x01: Sorceress 0x02: Necromancer 0x03: Paladin 0x04: Barbarian 0x05: Druid 0x06: Assassin 0x08:
 highlight this (if response to C > S [0x16] MCP_CHARRANK 0x10: dead character (hardcore only) 0x20: hardcore character
 0x40: expansion character Character Name: The character name is always 16 bytes. If the name is shorter than 16 bytes,
 the string is padded with nulls. The last byte is always null, since character names are limited to 15 chars. General
 Remarks: The server may respond to this packet with one or more of these messages. The client must not handle the data
 until the last packet in the batch is received. The messages' data should be concatenated backwards. For example, if 3
 packets were received, then the data buffer should contain the data of the 3rd packet, followed by the data of the 2nd
 packet, followed by the data of the 1st packet. Only after the last packet was received, the data buffer should be
 parsed. IMPORTANT NOTE: If the entry is the last entry in the packet, the character name might be smaller than 16
 bytes.In this case, the client MUST add null bytes to the end of the packet, BEFORE adding it to the data buffer.
Ladder
 packets are NOT SENT IN ANY ORDER - They are often sent completely out of order and must be placed back into the proper
 order. You have to infer the sequencing based on the 'how big' fields in the 10 byte header.

 ~~~~~~~~~~~~~~~~

 C > S [0x11] MCP_REQUESTLADDERDATA
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (BYTE) Ladder type
 (WORD) Starting position

 Remarks:
 This will request 16 ladder entries, starting at a zero-based location specified in 'Starting position'. For example if
 this is 0, then ladder entries 1-16 are retrieved. If this is 17, then ladder entries 18-33 are retrieved. Note: The
 values that Diablo 2 sends for this are always perfectly divisible by 16. This might be a requirement.
 Possible ladder types: 0x00: standard hardcore overall ladder 0x01: standard hardcore amazon ladder 0x02: standard
 hardcore sorceress ladder 0x03: standard hardcore necromancer ladder 0x04: standard hardcore paladin ladder 0x05:
 standard hardcore barbarian ladder 0x09: standard softcore overall ladder 0x0A: standard softcore amazon ladder 0x0B:
 standard softcore sorceress ladder 0x0C: standard softcore necromancer ladder 0x0D: standard softcore paladin ladder
 0x0E: standard softcore barbarian ladder 0x13: expansion hardcore overall ladder 0x14: expansion hardcore amazon ladder
 0x15: expansion hardcore sorceress ladder 0x16: expansion hardcore necromancer ladder 0x17: expansion hardcore paladin
 ladder 0x18: expansion hardcore barbarian ladder 0x19: expansion hardcore druid ladder 0x1A: expansion hardcore
assassin
 ladder 0x1B: expansion softcore overall ladder 0x1C: expansion softcore amazon ladder 0x1D: expansion softcore
sorceress
 ladder 0x1E: expansion softcore necromancer ladder 0x1F: expansion softcore paladin ladder 0x20: expansion softcore
 barbarian ladder 0x21: expansion softcore druid ladder 0x22: expansion softcore assassin ladder 

 ~~~~~~~~~~~~~~~~

 S > C [0x12] MCP_MOTD
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (BYTE) Unknown
 (STRING) MOTD

 Remarks:
 Contains the realm's MOTD. The Byte at the beginning is apparently ignored.

 ~~~~~~~~~~~~~~~~

 C > S [0x12] MCP_MOTD
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 [blank]

 Remarks:
 Requests the realm's MOTD.

 ~~~~~~~~~~~~~~~~

 C > S [0x13] MCP_CANCELGAMECREATE
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 [blank]

 Remarks:
 Notifies the server that you want to cancel the creation of your game.

 ~~~~~~~~~~~~~~~~

 S > C [0x14] MCP_CREATEQUEUE
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Position

 Remarks:
 Position in line to create a game.

 ~~~~~~~~~~~~~~~~

 C > S [0x16] MCP_CHARRANK
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Hardcore BOOL
 (DWORD) Expansion BOOL
 (STRING) Character Name

 Remarks:
 This packet is used to find a Diablo II character in the ladder. Hardcore and Expansion can either be 1 or 0 and define
 the ladder type (always Overall). The server responds with MCP_REQUESTLADDERDATA, listing (and possibly highlighting
 using character flag 0x08?) the page of ranks in which the character is found.

 ~~~~~~~~~~~~~~~~

 S > C [0x17] MCP_CHARLIST
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (WORD) Number of characters requested
 (DWORD) Number of characters that exist on this account
 (WORD) Number of characters returned
 For each character: (STRING) Character name (STRING) Character statstring 

 Remarks:
 Lists characters.

 The statstrings in this packet do not contain the product or character name. Everything else is the same as a character
 statstring you would receive from a character entering the channel.

 ~~~~~~~~~~~~~~~~

 C > S [0x17] MCP_CHARLIST
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Number of characters to list

 Remarks:
 Requests a character list.

 ~~~~~~~~~~~~~~~~

 S > C [0x18] MCP_CHARUPGRADE
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Result

 Remarks:
 Converts a non-expansion character to expansion.
 Known return values: 0x00: Success 0x46: Character not found 0x7A: Upgrade failed 0x7B: Character is expired 0x7C:
 Already expansion character 

 ~~~~~~~~~~~~~~~~

 C > S [0x18] MCP_CHARUPGRADE
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (STRING) Character Name

 Remarks:
 Converts a non-expansion character to expansion.

 ~~~~~~~~~~~~~~~~

 S > C [0x19] MCP_CHARLIST2
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (WORD) Number of characters requested
 (DWORD) Number of characters that exist on this account
 (WORD) Number of characters returned

 For each character: (DWORD) Expiration Date (STRING) Character name (STRING) Character statstring 

 Remarks:
 Lists characters.

 The expiration date is a second count. To determine when the character will expire, add this time to January 1 00:00:00
 UTC 1970 and determine the difference between that value and now (all in seconds).

 The statstrings in this packet do not contain the product or character name. Everything else is the same as a character
 statstring you would receive from a character entering the channel.

 ~~~~~~~~~~~~~~~~

 C > S [0x19] MCP_CHARLIST2
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Number of characters to list.

 Remarks:
 Requests a character list. 

 Up to a maximum of 8 characters can be requested.

 ~~~~~~~~~~~~~~~~

 D2GS Messages
 ------------------------------

 C > S [0x01] D2GS_WALKTOLOCATION
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (WORD) X coordinate
 (WORD) Y coordinate

 Remarks:
 Walk to a specified (X,Y) map coordinate.

 ~~~~~~~~~~~~~~~~

 C > S [0x02] D2GS_WALKTOENTITY
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) *Entity Type
 (DWORD) Entity ID

 *Entity Types
 -------------
 00 - Players
 01 - Monsters, NPCs, and Mercenaries
 02 - Stash, Waypoint, Chests, Portals, others.
 03 - Missiles
 04 - Items
 05 - Entrances

 Remarks:
 Makes your character walk to the Entity specified in Entity ID.

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x03] D2GS_RUNTOLOCATION
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (WORD) X coordinate
 (WORD) Y coordinate 

 Remarks:
 Run to a specified (X,Y) map coordinate. 

 ~~~~~~~~~~~~~~~~

 C > S [0x04] D2GS_RUNTOENTITY
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) *Entity Type
 (DWORD) Entity ID

 *Entity Types
 -------------
 00 - Players
 01 - Monsters, NPCs, and Mercenaries
 02 - Stash, Waypoint, Chests, Portals, others.
 03 - Missiles
 04 - Items
 05 - Entrances

 Remarks:
 Makes your character run to the Entity specified in Entity ID.

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x05] D2GS_LEFTSKILLONLOCATION
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (WORD) X coordinate
 (WORD) Y coordinate

 Remarks:
 Uses Left skill on specified (X,Y) map coordinate.

 ~~~~~~~~~~~~~~~~

 C > S [0x06] D2GS_LEFTSKILLONENTITY
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) *Entity Type
 (DWORD) Entity ID

 *Entity Types
 -------------
 00 - Players
 01 - Monsters, NPCs, and Mercenaries
 02 - Stash, Waypoint, Chests, Portals, others.
 03 - Missiles
 04 - Items
 05 - Entrances

 Remarks:
 Uses your left skill on the Entity specefied in Entity ID.

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x07] D2GS_LEFTSKILLONENTITYEX
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Entity Type
 (DWORD) Entity ID

 Remarks:
 Uses your left skill on the Entity specefied in Entity ID, while holding the hotkey for standing still(shift).

 Entity types
 ---------------
 00 - Players
 01 - Monsters, NPCs, and Mercenaries
 02 - Stash, Waypoint, Chests, Portals, others.
 03 - Missiles
 04 - Items
 05 - Entrances

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x08] D2GS_LEFTSKILLONLOCATIONEX
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (WORD) X coordinate
 (WORD) Y coordinate 

 Remarks:
 Uses Left skill on specified (X,Y) map coordinate.

 This packet is sent repeatedly when the mouse button is held down after the initial packet has been sent. 

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x09] D2GS_LEFTSKILLONENTITYEX2
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) *Entity Type
 (DWORD) Entity ID

 *Entity Types
 -------------
 00 - Players
 01 - Monsters, NPCs, and Mercenaries
 02 - Stash, Waypoint, Chests, Portals, others.
 03 - Missiles
 04 - Items
 05 - Entrances

 Remarks:
 Uses your left skill on the Entity specified in Entity ID.

 This packet is sent repeatedly when the mouse button is held down after the initial packet has been sent.

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x0A] D2GS_LEFTSKILLONENTITYEX3
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) *Entity Type
 (DWORD) Entity ID

 *Entity Types
 -------------
 00 - Players
 01 - Monsters, NPCs, and Mercenaries
 02 - Stash, Waypoint, Chests, Portals, others.
 03 - Missiles
 04 - Items
 05 - Entrances

 Remarks:
 Uses your left skill on the Entity specefied in Entity ID, while holding the hotkey for standing still(shift).

 This packet is sent repeatedly when the mouse button is held down after the initial packet has been sent. 

 Refer to the D2GS Entity Types document for more information.

 ~~~~~~~~~~~~~~~~

 C > S [0x0C] D2GS_RIGHTSKILLONLOCATION
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (WORD) X coordinate
 (WORD) Y coordinate 

 Remarks:
 Uses the currently selected skill at the specified location. 

 This packet is sent when the location is first clicked with the mouse. 

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x0D] D2GS_RIGHTSKILLONENTITY
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Entity Type
 (DWORD) Entity ID 

 Entity types
 --------
 00 - Players
 01 - Monsters, NPCs, and Mercenaries
 02 - Stash, Waypoint, Chests, Portals, others.
 03 - Missiles
 04 - Items
 05 - Entrances

 Remarks:
 Uses your right skill on the Entity specefied in Entity ID

 Refer to the D2GS Entity Types document for more information about Entities

 ~~~~~~~~~~~~~~~~

 C > S [0x0E] D2GS_RIGHTSKILLONENTITYEX
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Entity Type
 (DWORD) Entity ID

 Entity types
 --------
 00 - Players
 01 - Monsters, NPCs, and Mercenaries
 02 - Stash, Waypoint, Chests, Portals, others.
 03 - Missiles
 04 - Items
 05 - Entrances

 Remarks:
 Uses your right skill on the Entity specefied in Entity ID, while holding the hotkey for standing still(shift).

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x0F] D2GS_RIGHTSKILLONLOCATIONEX
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (WORD) X coordinate
 (WORD) Y coordinate 

 Remarks:
 Uses the currently selected skill at the specified location. 

 This packet is sent repeatedly when the mouse button is held down after the initial packet has been sent. 

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 S > C [0x10] D2GS_CHARTOOBJ
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (BYTE) Unknown
 (DWORD) Player ID
 (BYTE) Movement Type
 (BYTE) Destination Type
 *(DWORD) Object ID 
 *(WORD) X Coordinate
 *(WORD) Y Coordinate 

 Remarks:
 A character moves to an object within your view range.

 * - These are what the player is moving to.

 Possible values for Destination Type:
 0x00 - Another player
 0x01 - NPC or Monster
 0x02 - Object such as Stash, Waypoint, or a Town Portal
 0x04 - Item
 0x05 - Doorway

 Possible value for Movement Type:

 0x18 - Run
 0x00 - Walk Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x10] D2GS_RIGHTSKILLONENTITYEX2
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Entity Type
 (DWORD) Entity ID 

 Entity types
 --------
 00 - Players
 01 - Monsters, NPCs, and Mercenaries
 02 - Stash, Waypoint, Chests, Portals, others.
 03 - Missiles
 04 - Items
 05 - Entrances

 Remarks:
 Uses your right skill repeatedly on the Entity specefied in Entity ID.
 This packet is sent repeatedly when the mouse button is held down after the initial packet has been sent.

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x11] D2GS_RIGHTSKILLONENTITYEX3
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Entity Type
 (DWORD) Entity ID

 Entity Types
 --------
 00 - Players
 01 - Monsters, NPCs, and Mercenaries
 02 - Stash, Waypoint, Chests, Portals, others.
 03 - Missiles
 04 - Items
 05 - Entrances

 Remarks:
 Uses your right skill on the Entity specefied in Entity ID, while holding the hotkey for standing still(shift).

 This packet is sent repeatedly when the mouse button is held down after the initial packet has been sent. 

 ~~~~~~~~~~~~~~~~

 C > S [0x13] D2GS_INTERACTWITHENTITY
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Entity Type
 (DWORD) Entity ID 

 Entity types
 --------
 00 - Players
 01 - Monsters, NPCs, and Mercenaries
 02 - Stash, Waypoint, Chests, Portals, others.
 03 - Missiles
 04 - Items
 05 - Entrances

 Remarks:
 Interacts with the specified Entity. 
 For players and npc's, it will send a request to interact. 
 The interaction depends on the type of the unit or object. 
 For others it will trigger the object, for example using a shrine, looting a corpse you have permission to loot, or
 opening and closing a door.

 This packet is always followed by other's that relate to the type of interaction.

 ~~~~~~~~~~~~~~~~

 C > S [0x14] D2GS_OVERHEADMESSAGE
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (WORD) Unknown - 0x00, 0x00
 (STRING) Message
 (BYTE) Unused - 0x00
 (WORD) Unknown - 0x00, 0x00

 Remarks:
 This message is used when you'd like to put a message above a character's head as used in the client as "![message]".

 Restrictions: Total size of packet cannot be greater than 275 bytes. Message cannot be greater than 255 bytes. 

 Please note: This message's official name is not known, and has been invented. 

 Extra Info: The status of this information is: Public Colors can be created by adding hex FF 63 and a character 30 to
 3C. 

 Example:
 To make red, use FF 63 31.

 ~~~~~~~~~~~~~~~~

 C > S [0x16] D2GS_PICKUPITEM
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Unit Type
 (DWORD) Unit ID
 (DWORD) Action ID

 Remarks:
 Pick up a ground item to cursor buffer/inventory.

 Possible action IDs:
 0x00 - Move item to inventory
 0x01 - Move item to cursor buffer 

 Please note: This message's official name is not known, and has been invented. 

 ~~~~~~~~~~~~~~~~

 C > S [0x17] D2GS_DROPITEM
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID 

 Remarks:
 Drops the item in the player's cursor buffer to the ground. 

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x18] D2GS_ITEMTOBUFFER
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID
 (DWORD) X coordinate
 (DWORD) Y coordinate
 (DWORD) Buffer Type

 Possible Buffer Types:
 0x00 - Character's inventory (backpack)
 0x01 - NPC and other Trade Windows
 0x02 - Trade window
 0x03 - Horadric Cube
 0x04 - Stash 

 Remarks:
 Moves item from the player's cursor buffer to an inventory space.

 Please note: This message's official name is not known, and has been invented. 

 Inventory coordinates:
 (0,0) - Top left
 (9,3) - Bottom right

 ~~~~~~~~~~~~~~~~

 S > C [0x19] D2GS_SMALLGOLDPICKUP
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (BYTE) Amount 

 Remarks:
 Sent when you pick up a BYTE (255) of gold(254 or less).

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x19] D2GS_PICKUPBUFFERITEM
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID 

 Remarks:
 Pickup an item from the possible buffers below, moving it to the cursor buffer.

 Possible Buffers:
 0 - Inventory
 1 - NPC Trade & Other player's Trade Window?
 2 - Trade Screen
 3 - Horadric Cube
 4 - Stash

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x1A] D2GS_ITEMTOBODY
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID
 (DWORD) Body Location 

 Remarks:
 Moves item from player's cursor buffer to body location. Body locations are identified by the line number in the data
 file bodylocs.txt.

 Possible Body Locations:
 0x01 - Helm
 0x02 - Amulet
 0x03 - Armor
 0x04 - Left-hand weapon
 0x05 - Right-hand weapon
 0x06 - Left-hand ring
 0x07 - Right-hand ring
 0x08 - Belt
 0x09 - Boots
 0x0A - Gloves

 These values have been recorded for mercenary body locations, but aren't confirmed: (Note, each location ID is prefixed
 with 0x61)
 Example: 1A 64 00 00 00 61 02 00 00 (Move item 0x64 to Mercenary Right-hand weapon)

 0x01 - Mercenary Helm
 0x02 - Mercenary Right-hand Weapon
 0x03 - Mercenary Armor
 0x04 - Mercenary Left-hand Weapon 

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x1B] D2GS_SWAP2HANDEDITEM
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID
 *(DWORD) Body Location

 *0x04 is left hand
 *0x05 is right hand

 Remarks:
 Moves item from body location to player's cursor buffer.

 Body locations are the same as in D2GS_ITEMTOBODY

 Please note: This message's official name is not known, and has been invented. 

 ~~~~~~~~~~~~~~~~

 C > S [0x1C] D2GS_PICKUPBODYITEM
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (WORD) Body Location

 Remarks:
 Pickup an item from a Body Location to you're cursor buffer.

 Possible Body Locations:
 0x01 - Helm
 0x02 - Amulet
 0x03 - Armor
 0x04 - Left-hand weapon
 0x05 - Right-hand weapon
 0x06 - Left-hand ring
 0x07 - Right-hand ring
 0x08 - Belt
 0x09 - Boots
 0x0A - Gloves

 ~~~~~~~~~~~~~~~~

 S > C [0x1D] D2GS_SETBYTEATTR
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (BYTE) Attribute
 (BYTE) Amount 

 Remarks:
 Sets the current (base) amount of the specified attribute.

 Note: Since these are only base amounts, items that give increase/decrease the attribute should be added/subtracted
 to/from the base value sent in the message.

 Possible Attributes:

 0x00 - Strength 
 0x01 - Energy 
 0x02 - Dexterity 
 0x03 - Vitality 
 0x04 - Stat remaining 
 0x05 - Skill remaining 
 0x0C - Level 
 0x0D - Experience 
 0x0E - Gold on Person 
 0x0F - Gold in Stash 
 0x10 - Defense 
 0x11 - Max Attack Damage 
 0x12 - Min Attack Damage 
 0x13 - Attack Rating 
 0x15 - Min Attack Damage 
 0x16 - Max Attack Damage 
 0x19 - Damage 
 0x1f - Defense 
 0x27 - Fire Resistance 
 0x28 - +Max Fire Resistance 
 0x29 - Cold Resistance 
 0x2A - +Max Cold Resistance 
 0x2B - Lightning Resistance 
 0x2C - +Max Lightning Resistance 
 0x2D - Poison Resistance 
 0x2E - +Max poison Resistance 
 0x31 - Add Fire Damage 
 0x33 - Add Lightning damage 
 0x35 - Add Damage for Weapon/Items probably (one of these may be cold damage) 
 0x37 - Add Damage for Weapon/Items probably (one of these may be cold damage) 
 0x3A - Add Poison Damage 
 0x4C - Add Max Health for Weapon/Items probably 
 0x4D - Add Max Mana for Weapons/Items probably 
 0xA2 - Add Max Stamina for Weapons/Items probably 
 0xA3 - Add Max Stamina for Weapons/Items probably 
 0xAB - Add to Defense

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x1D] D2GS_SWITCHBODYITEM
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID
 (DWORD) Body Location 

 Remarks:
 Swaps item in player's cursor buffer with item in the body location.

 Possible Body Locations:
 0x01 - Helm
 0x02 - Amulet
 0x03 - Armor
 0x04 - Left-hand weapon
 0x05 - Right-hand weapon
 0x06 - Left-hand ring
 0x07 - Right-hand ring
 0x08 - Belt
 0x09 - Boots
 0x0A - Gloves

 Please note: This message's official name is not known, and has been invented. 

 ~~~~~~~~~~~~~~~~

 S > C [0x1E] D2GS_SETWORDATTR
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (BYTE) Attribute
 (WORD) Amount 

 Remarks:
 Sets the current (base) amount of the specified attribute.

 Note: Since these are only base amounts, items that give increase/decrease the attribute should be added/subtracted
 to/from the base value sent in the message.

 For attributes, see D2GS_SETBYTEATTR.

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 S > C [0x1F] D2GS_SETDWORDATTR
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (BYTE) Attribute - D2GS_SETWORDATTR
 (DWORD) Amount 

 Remarks:
 Updates an attribute and sets it to the value sent, 4 bytes max.

 Please note: This message's official name is not known, and has been invented. 

 ~~~~~~~~~~~~~~~~

 C > S [0x1F] D2GS_SWITCHINVENTORYITEM
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID - Item to place in inventory (cursor buffer)
 (DWORD) Item ID - Item to be replaced
 (DWORD) X coordinate for replace
 (DWORD) Y coordinate for replace 

 Remarks:
 Swaps the item in the player's cursor buffer with one in the player's inventory. Please note: 
 This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x20] D2GS_USEITEM
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID
 (DWORD) X coordinate
 (DWORD) Y coordinate 

 Remarks:
 Uses the specified item (such as a potion, town portal scroll, etc.).

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x21] D2GS_STACKITEM
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID - Stack item
 (DWORD) Item ID - Target item 

 Remarks:
 Stacks one item such as a key onto another item.

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x22] D2GS_REMOVESTACKITEM
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID 

 Remarks:
 Removes an item from the stack Please note: This message's official name is not known, and has been invented. The
 contents of this packet may be incomplete or incorrect, and your comments and contributions are requested.

 ~~~~~~~~~~~~~~~~

 C > S [0x23] D2GS_ITEMTOBELT
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID
 (DWORD) Belt Location 

 Remarks:
 Moves an item into the player's belt.

 Extra Info: The status of this information is: Public Belt locations start at 0x00 and go from right to left, starting
 at the lowest row and moving across, then going up one row. For example, location 0x03 would be at the bottom right
hand
 corner and location 0x0C would be at the top left corner in a 4-slot belt. This can be calculated as (row*4+column).

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x24] D2GS_REMOVEBELTITEM
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID 

 Remarks:
 Moves the specified item from the belt to the player's cursor buffer. 

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x25] D2GS_SWITCHBELTITEM
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID - Cursor buffer
 (DWORD) Item ID - Item to be replaced 

 Remarks:
 Replaces item in belt with item in player's cursor buffer.

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x26] D2GS_USEBELTITEM
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID
 (DWORD) Unknown - Possibly unused
 (DWORD) Unknown - Possibly unused 

 Remarks:
 Uses the specified item in the player's belt.

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x28] D2GS_INSERTSOCKETITEM
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID - Item to place in socket
 (DWORD) Item ID - Socketed item 

 Remarks:
 Inserts the specified item into a socketed item.

 ~~~~~~~~~~~~~~~~

 C > S [0x29] D2GS_SCROLLTOTOME
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID - Scroll
 (DWORD) Item ID - Tome 

 Remarks:
 Places a scroll into a tome of scrolls.

 Note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x2A] D2GS_ITEMTOCUBE
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Item ID
 (DWORD) Cube ID 

 Remarks:
 Moves item from player's cursor buffer into Horadric cube.

 ~~~~~~~~~~~~~~~~

 C > S [0x2D] D2GS_UNSELECTOBJ
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 blank 

 Remarks:
 Unselects the selected object. Please note: This message's official name is not known, and has been invented. The
 contents of this packet may be incomplete or incorrect, and your comments and contributions are requested.

 ~~~~~~~~~~~~~~~~

 C > S [0x2F] D2GS_NPCINIT
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Entity Type
 (DWORD) Entity ID 

 Entity types
 --------
 00 - Players
 01 - Monsters, NPCs, and Mercenaries
 02 - Stash, Waypoint, Chests, Portals, others.
 03 - Missiles
 04 - Items
 05 - Entrances

 Remarks:
 Initiate an NPC sesstion, sent following:
 C->S 0x13
 It indicates that you are now interacting with an NPC, and a dialog window is opened.

 This is prior to any choices being made to talk or trade etc.

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x30] D2GS_NPCCANCEL
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Entity Type
 (DWORD) NPC ID 

 Remarks:
 Stops interacting with an NPC 

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x32] D2GS_NPCBUY
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) NPC ID - Unconfirmed
 (DWORD) Item ID - Unconfirmed
 (DWORD) Buffer Type - Unconfirmed
 (DWORD) Cost 

 Remarks:
 Buys an item from a Non Player Character.

 Possible Buffer Types:
 0x00 - Regular (ordinary item)
 0x02 - Gambled 

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x33] D2GS_NPCSELL
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) NPC ID - Unconfirmed
 (DWORD) Item ID - Unconfirmed
 (DWORD) Buffer ID - Unconfirmed - Possible value 0x04
 (DWORD) Cost 

 Remarks:
 Sell an item to a Non Player Character. 

 The Buffer ID refers to the windows in the NPC trade screen, depending on what you are selling the Buffer ID will match
 the item type.
 After selling the item it will appear in the given Buffer ID.

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x38] D2GS_NPCTRADE
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Trade Type - Unconfirmed
 (DWORD) NPC ID - Unconfirmed
 (DWORD) Unknown - Unconfirmed - Possible value 0x00 

 Remarks:
 This packet's use is currently unconfirmed.

 Possible Trade Types:
 0x01 - Trade
 0x02 - Gamble

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x3F] D2GS_CHARACTERPHRASE
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (WORD) Phrase ID 

 Remarks:
 All phrases sent to the server will be heard by all players in your vicinity.

 Phrase IDs: (Note: The deciding of which of the two phrases are used is random)
 [0x19] "Help!" / "Help me!"
 [0x1A] "Follow me!" / "Come on!"
 [0x1B] "This is yours." / "This is for you."
 [0x1C] "Thanks!" / "Thank you."
 [0x1D] "Uh, oops." / "Forgive me."
 [0x1E] "Bye!" / "Good Bye!"
 [0x1F] "Die!" / "Time to die!"
 [0x20] "Run!" / "Run away!" Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x49] D2GS_WAYPOINT
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (BYTE) Waypoint ID
 (BYTE) Unknown - Appears to be random
 (WORD) Unknown - 0x00
 (BYTE) Level number
 (WORD) Unknown - 0x00 

 Remarks:
 Requests to go to a waypoint if it was already activated.

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x4F] D2GS_TRADE
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Request ID
 (WORD) Gold Amount 

 Remarks:
 This message should be used for manipulating the trading window, the Horadric Cube item window, and the Stash window.

 Possible Request ID's:
 [0x02] Cancel trade request
 [0x03] Accept trade request
 [0x04] Press Accept button (accept)
 [0x07] Press Accept button (unaccept) - This should be sent when placing items in the trade window as well.
 [0x08] Refresh window (See below for examples on usage)
 [0x12] Close stash window
 [0x13] Move gold (stash to inventory)
 [0x14] Move gold (inventory to stash)
 [0x17] Close Horadric Cube window

 Examples of using Refresh ID:
 Item has been picked up to mouse cursor buffer.
 Item has been placed in the trade screen.
 Accepted or closed a trade window.
 Manual unclick of Accept button.

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x50] D2GS_DROPGOLD
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) PlayerID
 (DWORD) GoldAmount 

 Remarks:
 Drops a pile of gold to the ground. 

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 S > C [0x51] D2GS_WORLDOBJECT
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (BYTE) Object Type - Any information appreciated
 (DWORD) Object ID
 (WORD) Object unique code
 (WORD) X Coordinate
 (WORD) Y Coordinate
 (BYTE) State *
 (BYTE) Interaction Condition 

 Remarks:
 Server-assigned coordinate, object ID, and state/interaction properties.

 States:
 0x00 - Object's state can be changed. (Confirm?)
 0x02 - Object's state cannot be changed with (0x13) interaction. (Confirm?)

 Interaction Conditions:
 0x00 - General object. E.G.: Stash, chests, etc.
 0x01 - Refresh shrine
 0x02 - Health shrine
 0x05 - Chest will catch fire (upon interaction)
 0x08 - Monster contained within chest (sarcophagus)
 0x0D - Mana recharge shrine
 0x0E - Stamina shrine
 0x0F - Experience shrine
 0x13 - Fire shrine
 0x80 - Chest is locked (State will be 0)

 *If this value is 0, expect no packet 0x0E (status) to follow, if 2, then there will be.

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 S > C [0x5C] D2GS_(COMP)STARTGAME
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 Blank 

 Remarks:
 This packet is part of the logon sequence, not to be confused with the other 0x5C.
 This packet is originally received compressed, so the message ID will correspond with [Protocol Headers] D2GS
 compressed format.
 This message is received with the 'OK' that you can go ahead and enter the gaming environment. 

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x5E] D2GS_PARTY
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (WORD) Action ID
 (DWORD) Player ID 

 Remarks:
 Possible Action IDs:

 0x06 - Invite player to party with you
 0x07 - Cancel invite to player
 0x08 - Accept invite from player
 0x09 - Leave party

 ~~~~~~~~~~~~~~~~

 C > S [0x61] D2GS_POTIONTOMERCENARY
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (WORD) Unknown - 0x00 

 Remarks:
 Takes the potion your cursor holds and gives it to the mercenary. Please note: This message's official name is not
 known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x68] D2GS_GAMELOGON
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) D2GS Server Hash
 (WORD) D2GS Server Token
 (BYTE) Character ID
 (DWORD) Version byte (Currently 0x0B)
 (DWORD) Unknown - Suggested Const (0xED5DCC50)
 (DWORD) Unknown - Suggested Const (0x91A519B6)
 (BYTE) Unknown - Suggested (0x00)
 (STRING) Character name
 (VOID) *See user-comment below 

 Remarks:
 Possible Character IDs:
 0x00 - Amazon
 0x01 - Sorceress
 0x02 - Necromancer
 0x03 - Paladin
 0x04 - Barbarian
 0x05 - Druid
 0x06 - Assassin

 The "Character name" field is a buffer of 15 characters with a null-terminator. This string should always be filled
 with 15 characters (plus terminator), padded with 0's for unused bytes.

 Note: If the character ID does not match the type of character you're attempting to logon with, and the character is
 nealy created (with 0 play time), then that character will automatically be changed or "morphed" into the character ID
 sent. 
 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x6A] D2GS_ENTERGAMEENVIRONMENT
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 blank 

 Remarks:
 This byte should be sent in order to start receiving in-game messages and to interact with the world itself. 

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 C > S [0x6D] D2GS_PING
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Tick Count
 (DWORD) Null
 (DWORD) Null 

 Remarks:
 This packet should be sent every five to seven seconds to avoid timeout.

 Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 S > C [0x77] D2GS_TRADEACTION
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (BYTE) Request Type 

 Remarks:
 A character is trading with you.

 Possible Request Type values:
 0x01 - Player requests trade initiation
 0x05 - Player presses 'Accept'
 0x06 - 'Accept' button disabled for both players
 0x09 - Out of inventory space
 0x0C - Player cancels trade
 0x0D - You accepted the trade agreement
 0x0E - Your 'Accept' button is disabled
 0x0F - 'Accept' buttons re-enabled Please note: This message's official name is not known, and has been invented.

 ~~~~~~~~~~~~~~~~

 S > C [0x7A] D2GS_LOGONRESPONSE
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (DWORD) Unknown - Possible acceptance/request ID 

 Remarks:
 This message is originally received compressed, so the message ID will correspond with D2GS compressed format.

 This message is received if your logon is accepted by the D2GS.

 Please note: This message's official name is not known, and has been invented. 

 ~~~~~~~~~~~~~~~~

 S > C [0x89] D2GS_UNIQUEEVENTS
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 (BYTE) EventId // see below,

 Events known so far:
 00 = Killed all the monsters in the den.
 01 = Tristram portal opening for the first time.
 03 = Staff being put into the oriface in act2
 06 = Ammy being poped in clawviper temple.
 07 = Summoner area? death or when the tome is clicked unsure which.
 08 = Duriel just died
 0b = Meph just died.
 0c = The last seal in cs was hit diablo is now released.
 0d = Diablo was killed or is dead.

 Remarks:
 I'm sure there are many others by looking at the gaps here.

 Note1: Unsure what to name this any suggestions will be taken into account.
 Note2: This seems to relate to various events that relate directly or indirectly to key quest states//events.

 ~~~~~~~~~~~~~~~~

 S > C [0xAF] D2GS_STARTLOGON
 **************************************

 Used By: Diablo II, Diablo II LOD

 Format:
 blank* 

 Remarks:
 Permission to initiate Game Server Logon.

 * - Although this packet is blank, the data received will still be compressed. Meaning the actual message size will be
 two bytes in length. (See [Sizes seen 0x01)
 (BYTE) 0x00
 (BYTE) 0x00
 (WORD) A
 (WORD) B

 Remarks:
 Packet CLS 2.

 Sent by the host sometimes with CLS 2, packet 0x3E.

 I'm not really sure what this message means.
 The values A and B (and probably the null values) are carbon copies of the values a player sends in CLS 2, packet 0x40.

 ~~~~~~~~~~~~~~~~

 C > C [0x40] SCGP_UNKNOWNRESPONSE
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Starcraft, Starcraft Japanese

 Format:
 (BYTE) ID (0x40)
 (DWORD) 0x00
 (DWORD) 0x00
 (WORD) A
 (WORD) B
 (BYTE) 0x00
 (DWORD) Uniqueness

 Remarks:
 Packet CLS 2.

 Send to the host in response to CLS 1, packet 0x50.

 I'm not sure what the A and B values in this message mean. However, it seems the host sends them to other players in
 CLS 2, packet 0x3F.

 ~~~~~~~~~~~~~~~~

 C > C [0x41] SCGP_CHANGERACE
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Starcraft, Starcraft Japanese

 Format:
 (BYTE) ID (0x41)
 (BYTE) Slot Index
 (BYTE) Race

 Remarks:
 Packet CLS 2.

 Sent to other players requesting the race of a given slot be changed.
 If changing your own race, the slot index must be 0x08.
 Possible Races:
 0x00 = Zerg
 0x01 = Terran
 0x02 = Protoss
 0x03 = Independent
 0x04 = Neutral
 0x06 = Random

 ~~~~~~~~~~~~~~~~

 C > C [0x42] SCGP_CHANGETEAM
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Starcraft, Starcraft Japanese

 Format:
 (BYTE) ID (0x42)
 (BYTE) Team Index

 Remarks:
 Packet CLS 2.

 Sent to other players requesting you be moved to the given team.

 Used in non-UMS games. To move team in a UMS game, use CLS 2, packet 0x43.

 ~~~~~~~~~~~~~~~~

 C > C [0x43] SCGP_CHANGETEAMUMS
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Starcraft, Starcraft Japanese

 Format:
 (BYTE) ID (0x43)
 (BYTE) Team Index

 Remarks:
 Packet CLS 2.

 Sent to other players requesting you be moved to the given team.
 If you are already in the given team, you will be moved to the next available slot in that team.

 Used in UMS games. To move team in a non-UMS game, use CLS 2, packet 0x42.

 ~~~~~~~~~~~~~~~~

 C > C [0x44] SCGP_CHANGESLOTSTATE
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Starcraft, Starcraft Japanese

 Format:
 (BYTE) ID (0x44)
 (BYTE) Slot Index
 (BYTE) State

 Remarks:
 Packet CLS 2.

 Sent by the host to change a given slot index to a new state:
 0x00 = Computer
 0x01 = Open
 0x02 = Closed

 ~~~~~~~~~~~~~~~~

 C > C [0x45] SCGP_SLOTSWITCH
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Starcraft, Starcraft Japanese

 Format:
 (BYTE) ID (0x45)
 (BYTE) Slot Index From
 (BYTE) Slot Index To

 Remarks:
 Packet CLS 2.

 Sent by the host to switch two slots. Used in Top vs Bottom games.

 ~~~~~~~~~~~~~~~~

 C > C [0x48] SCGP_SEED
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Starcraft, Starcraft Japanese

 Format:
 (BYTE) ID (0x48)
 (DWORD) Seconds since 1/1/1970
 (BYTE) 0x08
 (BYTE) 0x08
 (BYTE) 0x08
 (BYTE) 0x08
 (BYTE) 0x08
 (BYTE) 0x08
 (BYTE) 0x08
 (BYTE) 0x08

 Remarks:
 Packet CLS 2.

 Sent by the host in the cross over between game room and game play.

 Seeds game randomization, for example: who gets what start location/color/race etc.

 ~~~~~~~~~~~~~~~~

 C > C [0x49] SCGP_PLAYERJOIN
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Starcraft, Starcraft Japanese

 Format:
 (BYTE) ID (0x49)
 (DWORD) Player ID

 Remarks:
 Packet CLS 1.

 Sent from host to other players in lobby.

 Notifies other players that this player has joined the game.
 The game would display "X has joined the game" and then /astat them when receiving this.
 This is not sent for players who are already in the game.

 ~~~~~~~~~~~~~~~~

 C > C [0x4A] SCGP_ROOMDATA
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Starcraft, Starcraft Japanese

 Format:
 (BYTE) ID (0x4A)
 (WORD) Map Tileset
 (WORD) Map Width
 (WORD) Map Height
 (BYTE[12]) OWNR
 (BYTE[12]) SIDE
 (BYTE[12]) OWNR Default
 (BYTE[8]) FORC
 (BYTE[4]) FORC Flag
 (BYTE[8]) RACE

 Remarks:
 Packet CLS 1.

 The tileset, width and height are not retrieved from the map in case it hasn't been downloaded yet-- these 3 values are
 used on failth.
 Valid tilesets:
 0x00 = Badlands
 0x01 = Space Platform
 0x02 = Installation
 0x03 = Ashworld
 0x04 = Jungle
 0x05 = Desert
 0x06 = Arctic
 0x07 = Twilight

 The OWNR values are the base room slot values. They are modified values from the map to fit the given game
 configuration.
 The OWNR default is simply that, the default values from the map file.
 The 12 bytes is for each possible player (1 to 12)
 Possible values:
 0x00 = Doesn't exist
 0x02 = Human
 0x03 = Rescuable
 0x05 = Computer
 0x06 = Open
 0x07 = Neutral
 0x08 = Closed
 Note: OWNR of Rescuable and Neutral are not shown.

 The SIDE tells you the race for each player. These are modified SIDE values from the map file, to fit the given game
 configuration.
 1 SIDE byte for each possible player (1 to 12)
 Possible values:
 0x00 = Zerg
 0x01 = Terran
 0x02 = Protoss
 0x03 = Independent
 0x04 = Neutral
 0x06 = Random

 The FORC tells you the force/team index of each player.
 For example, 0x00 would mean no team (like melee) and 0x01 to 0x04 means this player/slot belongs to this team.

 The FORC Flag gives you the settings for each force.
 0x01 = Random start locations
 0x02 = Allies
 0x04 = Allie victory
 0x08 = Shared Vision

 The RACE tells you if a player can change their race *I think*. I'm not to sure about the RACE part, but i'm pretty
 sure thats what it does. For example, disables a player from changing their race

 ~~~~~~~~~~~~~~~~

 C > C [0x4B] SCGP_FORCENAMES
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Starcraft, Starcraft Japanese

 Format:
 (BYTE) ID (0x4B)
 (BYTE[30]) Force 1 Name
 (BYTE[30]) Force 2 Name
 (BYTE[30]) Force 3 Name
 (BYTE[30]) Force 4 Name

 Remarks:
 Packet CLS 1.

 This is only sent by the host to joining players, in Use Map Settings games, so they can display the name of the teams
 before they have downloaded the map.
 Each block of 30 bytes is infact a null-terminated string.

 ~~~~~~~~~~~~~~~~

 C > C [0x4C] SCGP_LOBBYCHAT
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Starcraft, Starcraft Japanese

 Format:
 (BYTE) ID (0x4C)
 (STRING) Chat message

 Remarks:
 Packet CLS 1.

 Sent to talk to other players in the game lobby.
 Note: If you're no longer in the game lobby, and are playing the game, you must use CLS 1, packet 0x00 to talk to other
 players.

 ~~~~~~~~~~~~~~~~

 C > C [0x4E] SCGP_REJECT
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Starcraft, Starcraft Japanese

 Format:
 (BYTE) ID (0x4E)
 (BYTE) Event

 Remarks:
 Packet CLS 1.

 Notifies you of an Event causing you to not be able to join:
 Possible values:
 0x01 = You have been banned.
 0x02 = Game creater has closed all avalible slots.
 0x03 = Game host has left the game.
 0x04 = Unable to join the game.
 0x05 = Save game file not found.
 0x06 = Unable to write scenario file.
 0x07 = Invalid game version.
 0x08 = Invalid client version.
 0x09 = Unable to authenticate map.
 Other = You have been booted.

 ~~~~~~~~~~~~~~~~

 C > C [0x4F] SCGP_MAP
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Starcraft, Starcraft Japanese

 Format:
 (BYTE) ID (0x4F)
 (WORD) Lengh of payload (discluding this value)
 (WORD) EventEvent 0x00: (WORD) 0x100 (DWORD) File Position Event 0x01: (DWORD) File Lengh (DWORD) File Checksum
 (STRING) File Name Event 0x02: (BYTE) Player ID (DWORD) File Position Event 0x03: [blank] Event 0x04: (BYTE) 0x00
 (DWORD) File Position (WORD) Data Block Lengh (VOID) File Data Block Event 0x05: (BYTE) 0x00 (DWORD) File Position 

 Remarks:
 Packet CLS 1.

 This packet is used to manage map downloading.
 Some important things to note:
 Players don't just download the map from the host. The host can request other ingame players send it, if they already
 have it.
 Data blocks are send in blocks of 128 bytes at a time, but you can get away with 256 blocks with out issue.

 Event 0x00 [C>H]:
 Tells the host if you have the map or not.
 For example, the map positon tells the host where to start sending the file from.
 If you already have the map, then the Map position should be the lengh of the file.

 Event 0x01 [H>C]:
 Asks a player if they have the given map.
 Players should respond to this, with event 0x00.

 Event 0x02 [H>C]:
 Tells the receiving player, to send the map to another player.

 Event 0x03 [H>C]:
 I'm not to sure about this one.
 This is send to a player who has just finished sending the map to another player, and also when the game is starting.

 Event 0x04 [C>C]:
 Used to send a block of the map to another player.
 Receiving players should verify the block of data, by sending event 0x05.
 Any breaks in the UDP stream should be managed with standard resend requests.

 Event 0x05 [C>C]:
 Verifies the position of the map you are currently at.
 This should be sent as a respone to event 0x04.

 ~~~~~~~~~~~~~~~~

 C > C [0x50] SCGP_UNKNOWNREQUEST
 **************************************

 Used By: Starcraft Shareware, Starcraft Broodwar, Starcraft, Starcraft Japanese

 Format:
 (BYTE) ID (0x50)

 Remarks:
 Packet CLS 1.

 Sent by the host during the join sequence.

 Players should respond to this, by sending CLS 2, 0x40.
 It is sent to joiners as part of the join process, a lot with/after CLS 1, 0x4A.

 ~~~~~~~~~~~~~~~~

 Battle.net v2 Messages
 ------------------------------

 ===============================
 End of Generated Documentation
 ===============================
 =======================================================
 Battle.net Documentation generated by BNETDocs
 =======================================================

 Links:
 ------
 [1] http://msdn2.microsoft.com/en-us/library/ms724295.aspx
 [2] http://msdn2.microsoft.com/en-us/library/ms724432.aspx
 [3] http://forum.valhallalegends.com/index.php?topic=15419.5
 [4] http://bnetdocs.org/?op=doc&did=13
 [5] http://msdn.microsoft.com/en-us/library/windows/desktop/ms645505(v=vs.85).aspx
 [6] http://msdn.microsoft.com/en-us/library/windows/desktop/ms645505(v=vs.85).aspx
 [7] https://github.com/HarpyWar/pvpgn/issues/15#issuecomment-44092744
 [8] https://pastebin.com/WhKsmdnD
 [9] https://pastebin.com/iDtEmhpr
 [10] http://forum.valhallalegends.com/index.php?topic=16255.0
 [11] https://pastebin.com/Dfz8Dzua
 [12] https://pastebin.com/Dfz8Dzua
 [13] https://pastebin.com/eGgRBcLV
 [14] https://pastebin.com/CyDV2pC2
 [15] https://pastebin.com/CyDV2pC2
 [16] http://msdn2.microsoft.com/en-us/library/ms776265.aspx
 [17] http://msdn2.microsoft.com/en-us/library/ms776270.aspx
 [18] http://forum.valhallalegends.com/index.php?topic=17356.0
 [19] http://forum.valhallalegends.com/index.php?topic=17356.0
